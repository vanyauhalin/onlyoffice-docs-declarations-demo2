{
  "openapi": "3.0.1",
  "info": {
    "title": "ASC.Files",
    "version": "v1"
  },
  "paths": {
    "/api/2.0/files/file/{fileId}/saveediting": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Saves edits to a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FileExtension": {
                    "type": "string"
                  },
                  "DownloadUri": {
                    "type": "string"
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Doc": {
                    "type": "string"
                  },
                  "Forcesave": {
                    "type": "boolean"
                  }
                }
              },
              "encoding": {
                "FileExtension": {
                  "style": "form"
                },
                "DownloadUri": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                },
                "Doc": {
                  "style": "form"
                },
                "Forcesave": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/startedit": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Informs about opening a file with the ID specified in the request for editing, locking it from being deleted or moved (this method is called by the mobile editors).",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for starting file editing",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEditRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEditRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEditRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/trackeditfile": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Tracks file changes when editing.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tabId",
            "in": "query",
            "description": "Tab ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "docKeyForTrack",
            "in": "query",
            "description": "Document key for tracking",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doc",
            "in": "query",
            "description": "Shared token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isFinish",
            "in": "query",
            "description": "Specifies whether to finish file tracking or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[[System.Boolean, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[[System.Boolean, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[[System.Boolean, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/openedit": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the initialization configuration of a file to open it in the editor.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "doc",
            "in": "query",
            "description": "Shared token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view",
            "in": "query",
            "description": "Specifies if a document will be opened for viewing only or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/presigned": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a link to download a file with the ID specified in the request asynchronously.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService+FileLink"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService+FileLink"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService+FileLink"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/sharedusers": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a list of users with their access rights to the file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/referencedata": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Returns the reference data to uniquely identify a file in its system and check the availability of insering data into the destination spreadsheet by the external link.",
        "requestBody": {
          "description": "Request parameters for getting reference data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/protectusers": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a list of users with their access rights to the protected file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/app-{fileId}/openedit": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Opens a third-party file with the ID specified in the request for editing.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.Configuration`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.Configuration`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.Configuration`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/docservice": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Checks the document service location.",
        "requestBody": {
          "description": "Request parameters for checking the document service location",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the address of the connected editors.",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "description": "Specifies the editor version or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/history": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Changes the version history of a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for changing version history",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistoryRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistoryRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistoryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed information about all the available file versions with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/checkconversion": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Checks the conversion status of a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Specifies if a conversion operation is started or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Starts a conversion operation of a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for starting file conversion",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/presigneduri": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a link to download a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/copyas": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Copies (and converts if possible) an existing file to the specified folder.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for copying a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAsRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAsRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAsRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/{folderId}/file": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a new file in the specified folder with the title specified in the request.",
        "description": "If a file extension is different from DOCX/XLSX/PPTX and refers to one of the known text, spreadsheet, or presentation formats, it will be changed to DOCX/XLSX/PPTX accordingly. If the file extension is not specified or is unknown, the DOCX extension will be added to the file title.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/{folderId}/html": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates an HTML (.html) file in the selected folder with the title and contents specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating an HTML file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/{folderId}/text": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a text (.txt) file in the selected folder with the title and contents specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating a text file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}": {
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Deletes a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for deleting a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed information about a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": -1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Updates the information of the selected file with the parameters specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/edit/diff": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a URL to the changes of a file version specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "doc",
            "in": "query",
            "description": "Shared token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/edit/history": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the version history of a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "doc",
            "in": "query",
            "description": "Shared token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/lock": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Locks a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for locking a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/restoreversion": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Restores a file version specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "File version URL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doc",
            "in": "query",
            "description": "Shared token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/comment": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Updates a comment in a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating a comment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateCommentRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateCommentRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateCommentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/{fileId}/update": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Updates the contents of a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Encrypted": {
                    "type": "boolean"
                  },
                  "Forcesave": {
                    "type": "boolean"
                  },
                  "FileExtension": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Encrypted": {
                  "style": "form"
                },
                "Forcesave": {
                  "style": "form"
                },
                "FileExtension": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/{fileId}/properties": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns file properties of the specified file.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.EntryPropertiesRequestDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.EntryPropertiesRequestDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.EntryPropertiesRequestDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Saves file properties to the specified file.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "File properties request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.EntryPropertiesRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.EntryPropertiesRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.EntryPropertiesRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EntryProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EntryProperties"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EntryProperties"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{id}/link": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the primary external link with the identifier specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/app-{fileId}": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed information about a third-party file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@my/file": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a new file in the \"My documents\" section with the title specified in the request.",
        "description": "If a file extension is different from DOCX/XLSX/PPTX and refers to one of the known text, spreadsheet, or presentation formats, it will be changed to DOCX/XLSX/PPTX accordingly. If the file extension is not specified or is unknown, the DOCX extension will be added to the file title.",
        "requestBody": {
          "description": "Request parameters for creating a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@common/html": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates an HTML (.html) file in the \"Common\" section with the title and contents specified in the request.",
        "requestBody": {
          "description": "Request parameters for creating an HTML file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@my/html": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates an HTML (.html) file in the \"My documents\" section with the title and contents specified in the request.",
        "requestBody": {
          "description": "Request parameters for creating an HTML file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@common/text": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a text (.txt) file in the \"Common\" section with the title and contents specified in the request.",
        "requestBody": {
          "description": "Request parameters for creating a text file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@my/text": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a text (.txt) file in the \"My documents\" section with the title and contents specified in the request.",
        "requestBody": {
          "description": "Request parameters for creating a text file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/thumbnails": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates thumbnails for the files with the IDs specified in the request.",
        "requestBody": {
          "description": "Base batch request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/batch/properties": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Saves file properties to the specified files.",
        "requestBody": {
          "description": "Batch entry properties request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchEntryPropertiesRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchEntryPropertiesRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchEntryPropertiesRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.EntryProperties"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.EntryProperties"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.EntryProperties"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/folder/{folderId}": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a new folder with the title specified in the request. The parent folder ID can be also specified.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Parent folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating a folder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Deletes a folder with the ID specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for deleting a folder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolderDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolderDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed information about a folder with the ID specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Renames the selected folder with a new title specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating a folder: Title (string) - new folder title",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/{folderId}": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed list of files and folders located in the folder with the ID specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "roomId",
            "in": "query",
            "description": "Room ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "excludeSubject",
            "in": "query",
            "description": "Specifies whether to exclude a subject or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "description": "Specifies whether to return only files, only folders or all elements from the specified folder",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          },
          {
            "name": "extension",
            "in": "query",
            "description": "Specifies whether to search for a specific file extension",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/folder/{folderId}/path": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a path to the folder with the ID specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/{folderId}/subfolders": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a list of all the subfolders from a folder with the ID specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/{folderId}/news": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a list of all the new items from a folder with the ID specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@common": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed list of files and folders located in the \"Common\" section.",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@favorites": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed list of files and folders located in the \"Favorites\" section.",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@my": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed list of files and folders located in the \"My documents\" section.",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "description": "Specifies whether to return only files, only folders or all elements from the specified folder",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@privacy": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed list of files and folders located in the \"Private Room\" section.",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@projects": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed list of files and folders located in the \"In projects\" section.",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@recent": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed list of files located in the \"Recent\" section.",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@root": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns all the sections matching the parameters specified in the request.",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withoutTrash",
            "in": "query",
            "description": "Specifies whether to return the \"Trash\" section or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withoutAdditionalFolder",
            "in": "query",
            "description": "Specifies whether to return sections with or without additional folders",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@share": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed list of files and folders located in the \"Shared with me\" section.",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@templates": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed list of files located in the \"Templates\" section.",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@trash": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed list of files and folders located in the \"Trash\" section.",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "description": "Specifies whether to return only files, only folders or all elements from the specified folder",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/masterform/{fileId}/checkfillformdraft": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Checks if the current file is a form draft which can be filled out.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for checking a form draft",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraftRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraftRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraftRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/fileops/bulkdownload": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Starts the download process of files and folders with the IDs specified in the request.",
        "requestBody": {
          "description": "Request parameters for downloading files",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/fileops/copy": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Copies all the selected files and folders to the folder with the ID specified in the request.",
        "requestBody": {
          "description": "Request parameters for copying files",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/fileops/delete": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Deletes the files and folders with the IDs specified in the request.",
        "requestBody": {
          "description": "Request parameters for deleting files",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/fileops/emptytrash": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Deletes all the files and folders from the \"Trash\" folder.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/fileops": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a list of all the active operations.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/fileops/markasread": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Marks the files and folders with the IDs specified in the request as read.",
        "requestBody": {
          "description": "Base batch request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/fileops/move": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Moves all the selected files and folders to the folder with the ID specified in the request.",
        "requestBody": {
          "description": "Request parameters for moving files and folders",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Checks a batch of files and folders for conflicts when moving or copying them to the folder with the ID specified in the request.",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "description": "Request parameters for checking files and folders for conflicts",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/fileops/terminate/{id}": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Finishes an operation with the ID specified in the request or all the active operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Operation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/{fileId}/sharedlinkAsync": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Returns an external link to the shared file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for generating the shared link",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GenerateSharedLinkRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GenerateSharedLinkRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GenerateSharedLinkRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/share": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed information about the shared file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Sets the sharing settings to a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Security information request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SecurityInfoRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SecurityInfoRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SecurityInfoRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/folder/{folderId}/share": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the detailed information about the shared folder with the ID specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Sets the sharing settings to a folder with the ID specified in the request.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Security information request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SecurityInfoRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SecurityInfoRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SecurityInfoRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/{fileId}/setacelink": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Sets the access status for the external link to the file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for generating the sharing link",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GenerateSharedLinkRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GenerateSharedLinkRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GenerateSharedLinkRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/publickeys": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the encryption keys to access a file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Core.Entries.EncryptionKeyPairDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Core.Entries.EncryptionKeyPairDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Core.Entries.EncryptionKeyPairDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/sendeditornotify": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Sends a message to the users who are mentioned in the file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Mention message request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionMessageWrapper"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionMessageWrapper"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionMessageWrapper"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.AceShortWrapper"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.AceShortWrapper"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.AceShortWrapper"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/owner": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Changes the owner of the file with the ID specified in the request.",
        "requestBody": {
          "description": "Request parameters for changing the file owner",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeOwnerRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeOwnerRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeOwnerRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/share": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Returns the sharing rights for all the files and folders specified in the request.",
        "requestBody": {
          "description": "Base batch request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Removes the sharing rights from all the files and folders specified in the request.",
        "requestBody": {
          "description": "Base batch request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Sets the sharing rights to all the files and folders specified in the request.",
        "requestBody": {
          "description": "Security information request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SecurityInfoRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SecurityInfoRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SecurityInfoRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/share/{key}": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the external data by the key specified in the request.",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The unique document identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ExternalShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ExternalShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ExternalShareDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/share/{key}/password": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Applies a password specified in the request to get the external data.",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The unique document identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "External data request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ExternalShareRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ExternalShareRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ExternalShareRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ExternalShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ExternalShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ExternalShareDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/thirdparty": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Changes the access to the third-party settings.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a list of all the connected third-party accounts.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Saves the third-party storage service account. For WebDav, Yandex, kDrive and SharePoint, the login and password are used for authentication. For other providers, the authentication is performed using a token received via OAuth 2.0.",
        "description": "List of provider keys: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive.",
        "requestBody": {
          "description": "Third-party request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/changedeleteconfrim": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Specifies whether to confirm the file deletion or not.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/settings/downloadtargz": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Changes the format of the downloaded archive from .zip to .tar.gz. This method uses the body parameters.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/settings/favorites": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Displays the \"Favorites\" folder.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/displayRecent": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Displays the \"Recent\" folder.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/settings/templates": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Displays the \"Templates\" folder.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/settings/external": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Changes the ability to share a file externally.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/settings/externalsocialmedia": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Changes the ability to share a file externally on social networks.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/forcesave": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Changes the ability to force save a file.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/settings": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns all the file settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Classes.FilesSettingsHelper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Classes.FilesSettingsHelper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Classes.FilesSettingsHelper"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/info": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the information about the Documents module.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/hideconfirmconvert": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Hides the confirmation dialog for saving the file copy in the original format when converting a file.",
        "requestBody": {
          "description": "Request parameters for hiding the confirmation dialog",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.HideConfirmConvertRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.HideConfirmConvertRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.HideConfirmConvertRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@privacy/available": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Checks if the Private Room settings are available or not.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/storeforcesave": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Changes the ability to store the forcesaved file versions.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/storeoriginal": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Changes the ability to upload documents in the original formats as well.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/keepnewfilename": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Specifies whether to ask a user for a file name on creation or not.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/updateifexist": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Updates a file version if a file with such a name already exists.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/settings/autocleanup": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the trash bin auto-clearing setting.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Updates the trash bin auto-clearing setting.",
        "requestBody": {
          "description": "Auto-clearing request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/settings/dafaultaccessrights": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Changes the default access rights in the sharing settings.",
        "requestBody": {
          "description": "Sharing rights (None, ReadWrite, Read, Restrict, Varies, Review, Comment, FillForms, CustomFilter, RoomAdmin, Editing, Collaborator)",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/recent": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Adds a file with the ID specified in the request to the \"Recent\" section.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/favorites/{fileId}": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Changes the favorite status of the file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "favorite",
            "in": "query",
            "description": "Specifies if this file is marked as favorite or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/favorites": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Adds files and folders with the IDs specified in the request to the favorite list.",
        "requestBody": {
          "description": "Base batch request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Removes files and folders with the IDs specified in the request from the favorite list. This method uses the body parameters.",
        "requestBody": {
          "description": "Base batch request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/templates": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Adds files with the IDs specified in the request to the template list.",
        "requestBody": {
          "description": "Request parameters for adding files to the template list",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Removes files with the IDs specified in the request from the template list.",
        "requestBody": {
          "description": "List of file IDs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/thirdparty/capabilities": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a list of the available providers.",
        "description": "Available provider keys: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/wordpress": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a WordPress post with the parameters specified in the request.",
        "requestBody": {
          "description": "Request parameters for creating a WordPress post",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateWordpressPostRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateWordpressPostRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateWordpressPostRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/thirdparty/{providerId}": {
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Removes the third-party storage service account with the ID specified in the request.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "Provider ID. It is a part of the folder ID. Example: folder ID is \"sbox-123\", then provider ID is \"123\"",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/wordpress-delete": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Deletes the WordPress plugin information.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/thirdparty/common": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a list of the third-party services connected to the \"Common\" section.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/thirdparty/backup": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Return a backup of the connected third-party account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Saves a backup of the connected third-party account.",
        "description": "List of provider key: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive",
        "requestBody": {
          "description": "Third-party backup request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/wordpress-info": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the WordPress plugin information.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/wordpress-save": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Saves the user WordPress information when logging in.",
        "requestBody": {
          "description": "Request parameters for saving WordPress information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.WordpressSaveRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.WordpressSaveRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.WordpressSaveRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/{folderId}/upload/create_session": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a session to upload large files in multiple chunks to the folder with the ID specified in the request.",
        "description": "Each chunk can have different length but the length should be multiple of <b>512</b> and greater or equal to <b>10 mb</b>. Last chunk can have any size.\r\nAfter the initial response to the request with the <b>200 OK</b> status, you must get the <em>location</em> field value from the response. Send all your chunks to this location.\r\nEach chunk must be sent in the exact order the chunks appear in the file.\r\nAfter receiving each chunk, the server will respond with the current information about the upload session if no errors occurred.\r\nWhen the number of bytes uploaded is equal to the number of bytes you sent in the initial request, the server responds with the <b>201 Created</b> status and sends you information about the uploaded file.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Session request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/edit_session": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a session to edit the existing file with multiple chunks (needed for WebDAV).",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileSize",
            "in": "query",
            "description": "File size in bytes",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/{folderId}/insert": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Inserts a file specified in the request to the selected folder by single file uploading.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Title": {
                    "type": "string"
                  },
                  "CreateNewIfExist": {
                    "type": "boolean"
                  },
                  "KeepConvertStatus": {
                    "type": "boolean"
                  },
                  "Stream.CanRead": {
                    "type": "boolean"
                  },
                  "Stream.CanWrite": {
                    "type": "boolean"
                  },
                  "Stream.CanSeek": {
                    "type": "boolean"
                  },
                  "Stream.CanTimeout": {
                    "type": "boolean"
                  },
                  "Stream.Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Stream.Position": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Stream.ReadTimeout": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Stream.WriteTimeout": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "CreateNewIfExist": {
                  "style": "form"
                },
                "KeepConvertStatus": {
                  "style": "form"
                },
                "Stream.CanRead": {
                  "style": "form"
                },
                "Stream.CanWrite": {
                  "style": "form"
                },
                "Stream.CanSeek": {
                  "style": "form"
                },
                "Stream.CanTimeout": {
                  "style": "form"
                },
                "Stream.Length": {
                  "style": "form"
                },
                "Stream.Position": {
                  "style": "form"
                },
                "Stream.ReadTimeout": {
                  "style": "form"
                },
                "Stream.WriteTimeout": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/{folderId}/upload": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Uploads a file specified in the request to the selected folder by single file uploading or standart multipart/form-data method.",
        "description": " You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inDto",
            "in": "query",
            "description": "Request parameters for uploading a file",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/@common/insert": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Inserts a file specified in the request to the \"Common\" section by single file uploading.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Title": {
                    "type": "string"
                  },
                  "CreateNewIfExist": {
                    "type": "boolean"
                  },
                  "KeepConvertStatus": {
                    "type": "boolean"
                  },
                  "Stream.CanRead": {
                    "type": "boolean"
                  },
                  "Stream.CanWrite": {
                    "type": "boolean"
                  },
                  "Stream.CanSeek": {
                    "type": "boolean"
                  },
                  "Stream.CanTimeout": {
                    "type": "boolean"
                  },
                  "Stream.Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Stream.Position": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Stream.ReadTimeout": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Stream.WriteTimeout": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "CreateNewIfExist": {
                  "style": "form"
                },
                "KeepConvertStatus": {
                  "style": "form"
                },
                "Stream.CanRead": {
                  "style": "form"
                },
                "Stream.CanWrite": {
                  "style": "form"
                },
                "Stream.CanSeek": {
                  "style": "form"
                },
                "Stream.CanTimeout": {
                  "style": "form"
                },
                "Stream.Length": {
                  "style": "form"
                },
                "Stream.Position": {
                  "style": "form"
                },
                "Stream.ReadTimeout": {
                  "style": "form"
                },
                "Stream.WriteTimeout": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@my/insert": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Inserts a file specified in the request to the \"My documents\" section by single file uploading.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Title": {
                    "type": "string"
                  },
                  "CreateNewIfExist": {
                    "type": "boolean"
                  },
                  "KeepConvertStatus": {
                    "type": "boolean"
                  },
                  "Stream.CanRead": {
                    "type": "boolean"
                  },
                  "Stream.CanWrite": {
                    "type": "boolean"
                  },
                  "Stream.CanSeek": {
                    "type": "boolean"
                  },
                  "Stream.CanTimeout": {
                    "type": "boolean"
                  },
                  "Stream.Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Stream.Position": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Stream.ReadTimeout": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Stream.WriteTimeout": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "CreateNewIfExist": {
                  "style": "form"
                },
                "KeepConvertStatus": {
                  "style": "form"
                },
                "Stream.CanRead": {
                  "style": "form"
                },
                "Stream.CanWrite": {
                  "style": "form"
                },
                "Stream.CanSeek": {
                  "style": "form"
                },
                "Stream.CanTimeout": {
                  "style": "form"
                },
                "Stream.Length": {
                  "style": "form"
                },
                "Stream.Position": {
                  "style": "form"
                },
                "Stream.ReadTimeout": {
                  "style": "form"
                },
                "Stream.WriteTimeout": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/@common/upload": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Uploads a file specified in the request to the \"Common\" section by single file uploading or standart multipart/form-data method.",
        "description": " You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "description": "Request parameters for uploading a file",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/@my/upload": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Uploads a file specified in the request to the \"My documents\" section by single file uploading or standart multipart/form-data method.",
        "description": " You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "description": "Request parameters for uploading a file",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/rooms": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a room in the \"Rooms\" section.",
        "requestBody": {
          "description": "Request parameters for creating a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the contents of the \"Rooms\" section by the parameters specified in the request.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter by room type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
            }
          },
          {
            "name": "subjectId",
            "in": "query",
            "description": "Filter by user ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withSubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "searchArea",
            "in": "query",
            "description": "Room search area (Active, Archive, Any)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.SearchArea"
            }
          },
          {
            "name": "withoutTags",
            "in": "query",
            "description": "Specifies whether to search by tags or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Tags in the serialized format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeSubject",
            "in": "query",
            "description": "Specifies whether to exclude a subject or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "description": "Filter by provider name (None, Box, DropBox, GoogleDrive, kDrive, OneDrive, SharePoint, WebDav, Yandex)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ProviderFilter"
            }
          },
          {
            "name": "subjectFilter",
            "in": "query",
            "description": "Filter by subject (Owner - 1, Member - 1)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.SubjectFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the room information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Renames a room with the ID specified in  the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Removes a room with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for deleting a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}/archive": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Moves a room with the ID specified in the request to the \"Archive\" section.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for archiving a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}/unarchive": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Moves a room with the ID specified in the request from the \"Archive\" section to the \"Rooms\" section.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for unarchiving a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}/share": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Sets the access rights to a room with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for inviting users to a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the access rights of a room with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Share type filter",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Security.ShareFilterType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}/links": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Sets an external or invitation link with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Link request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LinkRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LinkRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LinkRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the links of a room with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Link type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LinkType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}/link": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns the primary external link of a room with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}/tags": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Adds the tags to a room with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for adding tags",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Removes the tags from a room with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for removing tags",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}/logo": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a logo for a room with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Logo request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Removes a logo from a room with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}/pin": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Pins a room with the ID specified in the request to the top of the list.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}/unpin": {
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Unpins a room with the ID specified in the request from the top of the list.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/{id}/resend": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Resends the email invitations to a room with the ID specified in the request to the selected users.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "User invitation request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitationRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitationRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/rooms/thirdparty/{id}": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a room in the \"Rooms\" section stored in a third-party storage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the folder in the third-party storage in which the contents of the room will be stored",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/tags": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Creates a custom tag with the parameters specified in the request.",
        "requestBody": {
          "description": "Request parameters for creating a tag",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Returns a list of custom tags.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Deletes a bunch of custom tags specified in the request.",
        "requestBody": {
          "description": "Batch tags request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/files/logos": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Uploads a temporary image to create a room logo.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "formCollection": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[Microsoft.Extensions.Primitives.StringValues, Microsoft.Extensions.Primitives, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
                    }
                  }
                }
              },
              "encoding": {
                "formCollection": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/rooms/accept": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Accepts an invitation to a room via an external link.",
        "requestBody": {
          "description": "Request parameters for accepting invitations",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AcceptInvitationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AcceptInvitationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AcceptInvitationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/privacyroom/access/{fileId}": {
      "get": {
        "tags": [
          "privacyroom"
        ],
        "summary": "Returns all the key pairs of the users who have access to the file with the ID specified in the request.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Core.Entries.EncryptionKeyPairDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Core.Entries.EncryptionKeyPairDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Core.Entries.EncryptionKeyPairDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/privacyroom/keys": {
      "get": {
        "tags": [
          "privacyroom"
        ],
        "summary": "Returns a key pair for the current user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Entries.EncryptionKeyPairDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Entries.EncryptionKeyPairDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Entries.EncryptionKeyPairDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "privacyroom"
        ],
        "summary": "Sets the key pair for the current user.",
        "requestBody": {
          "description": "Request parameters for setting encryption keys",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.PrivacyRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.PrivacyRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.PrivacyRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/privacyroom": {
      "get": {
        "tags": [
          "privacyroom"
        ],
        "summary": "Checks if the Private Room settings are enabled or not.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "privacyroom"
        ],
        "summary": "Enables the Private Room settings.",
        "requestBody": {
          "description": "Request parameters for setting encryption keys",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.PrivacyRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.PrivacyRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.PrivacyRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ASC.Api.Collections.ItemKeyValuePair`2[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "key": { },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Core.ApiDateTime": {
        "type": "object",
        "properties": {
          "utcTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "timeZoneOffset": {
            "$ref": "#/components/schemas/System.TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Core.Module": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "appName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "helpUrl": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Users.EmployeeActivationStatus": {
        "enum": [
          0,
          1,
          2,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Users.EmployeeStatus": {
        "enum": [
          1,
          2,
          4,
          5,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Users.MobilePhoneActivationStatus": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Users.UserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sex": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
          },
          "terminatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "workFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "contacts": {
            "type": "string",
            "nullable": true
          },
          "contactsList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "removed": {
            "type": "boolean"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "cultureName": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "mobilePhoneActivationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus"
          },
          "sid": {
            "type": "string",
            "nullable": true
          },
          "ldapQouta": {
            "type": "integer",
            "format": "int64"
          },
          "ssoNameId": {
            "type": "string",
            "nullable": true
          },
          "ssoSessionId": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkActivation": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.FileShareParams": {
        "type": "object",
        "properties": {
          "shareTo": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.AcceptInvitationDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean"
          },
          "gap": {
            "$ref": "#/components/schemas/ASC.Files.Core.DateToAutoCleanUp"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchEntryPropertiesRequestDto": {
        "type": "object",
        "properties": {
          "filesId": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "createSubfolder": {
            "type": "boolean"
          },
          "fileProperties": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.EntryPropertiesRequestDto"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "destFolderId": { },
          "conflictResolveType": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileConflictResolveType"
          },
          "deleteAfter": {
            "type": "boolean"
          },
          "content": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ChangeHistoryRequestDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "continueVersion": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ChangeOwnerRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "sync": {
            "type": "boolean"
          },
          "startConvert": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto": {
        "type": "object",
        "properties": {
          "docServiceUrl": {
            "type": "string",
            "nullable": true
          },
          "docServiceUrlInternal": {
            "type": "string",
            "nullable": true
          },
          "docServiceUrlPortal": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraftRequestDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "doc": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "requestView": {
            "type": "boolean",
            "readOnly": true
          },
          "requestEmbedded": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CopyAsRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]": {
        "type": "object",
        "properties": {
          "destTitle": {
            "type": "string",
            "nullable": true
          },
          "destFolderId": { },
          "enableExternalExt": {
            "type": "boolean"
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto`1[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "templateId": { },
          "enableExternalExt": {
            "type": "boolean"
          },
          "formId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean"
          },
          "share": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.FileShareParams"
            },
            "nullable": true
          },
          "notify": {
            "type": "boolean"
          },
          "sharingMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateWordpressPostRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "deleteAfter": {
            "type": "boolean"
          },
          "immediately": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteFolderDto": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean"
          },
          "immediately": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteRequestDto": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean"
          },
          "immediately": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequestDto": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "fileConvertIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Api.Collections.ItemKeyValuePair`2[[System.Text.Json.JsonElement, System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.EntryPropertiesRequestDto": {
        "type": "object",
        "properties": {
          "formFilling": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FormFillingPropertiesRequestDto"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ExternalShareRequestDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.FormFillingPropertiesRequestDto": {
        "type": "object",
        "properties": {
          "collectFillForm": {
            "type": "boolean"
          },
          "toFolderId": {
            "type": "string",
            "nullable": true
          },
          "toFolderPath": {
            "type": "string",
            "nullable": true
          },
          "createFolderTitle": {
            "type": "string",
            "nullable": true
          },
          "createFileMask": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.GenerateSharedLinkRequestDto": {
        "type": "object",
        "properties": {
          "share": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "integer",
            "format": "int32"
          },
          "instanceId": {
            "type": "string",
            "nullable": true
          },
          "sourceFileId": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.HideConfirmConvertRequestDto": {
        "type": "object",
        "properties": {
          "save": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.LinkRequestDto": {
        "type": "object",
        "properties": {
          "linkId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "linkType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LinkType"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "denyDownload": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.LockFileRequestDto": {
        "type": "object",
        "properties": {
          "lockFile": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.LogoRequestDto": {
        "type": "object",
        "properties": {
          "tmpFile": {
            "type": "string",
            "nullable": true
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.PrivacyRoomRequestDto": {
        "type": "object",
        "properties": {
          "publicKey": {
            "type": "string",
            "nullable": true
          },
          "privateKeyEnc": {
            "type": "string",
            "nullable": true
          },
          "enable": {
            "type": "boolean"
          },
          "update": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomInvitation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequestDto": {
        "type": "object",
        "properties": {
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitation"
            },
            "nullable": true
          },
          "notify": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.ApiModels.RequestDto.SecurityInfoRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "share": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.FileShareParams"
            },
            "nullable": true
          },
          "notify": {
            "type": "boolean"
          },
          "sharingMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.SessionRequestDto": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "relativePath": {
            "type": "string",
            "nullable": true
          },
          "createOn": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "encrypted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.StartEditRequestDto": {
        "type": "object",
        "properties": {
          "editingAlone": {
            "type": "boolean"
          },
          "doc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto": {
        "type": "object",
        "properties": {
          "fileIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "customerTitle": {
            "type": "string",
            "nullable": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "isCorporate": {
            "type": "boolean"
          },
          "isRoomsStorage": {
            "type": "boolean"
          },
          "customerTitle": {
            "type": "string",
            "nullable": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true
          },
          "providerId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateCommentRequestDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateFileRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "lastVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "contentType": {
            "$ref": "#/components/schemas/System.Net.Mime.ContentType"
          },
          "contentDisposition": {
            "$ref": "#/components/schemas/System.Net.Mime.ContentDisposition"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "nullable": true
          },
          "createNewIfExist": {
            "type": "boolean",
            "nullable": true
          },
          "storeOriginalFileFlag": {
            "type": "boolean",
            "nullable": true
          },
          "keepConvertStatus": {
            "type": "boolean"
          },
          "stream": {
            "$ref": "#/components/schemas/System.IO.Stream"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UserInvitationRequestDto": {
        "type": "object",
        "properties": {
          "usersIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "resendAll": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.WordpressSaveRequestDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.DocumentConfig`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "documentType": {
            "type": "string",
            "nullable": true
          },
          "editorConfig": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorConfiguration`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "editorType": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
          },
          "editorUrl": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "file": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "Operation": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "processed": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "docServiceUrlApi": {
            "type": "string",
            "nullable": true
          },
          "docServiceUrl": {
            "type": "string",
            "nullable": true
          },
          "docServiceUrlInternal": {
            "type": "string",
            "nullable": true
          },
          "docServicePortalUrl": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditHistoryChangesWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryAuthor"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "versionGroup": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryAuthor"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "changesHistory": {
            "type": "string",
            "nullable": true
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryChangesWrapper"
            },
            "nullable": true
          },
          "serverVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ExternalShareDto": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.Status"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.Logo"
          },
          "shared": {
            "type": "boolean"
          },
          "linkId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "nullable": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "rootFolderId": {
            "type": "integer",
            "format": "int32"
          },
          "originId": {
            "type": "integer",
            "format": "int32"
          },
          "originRoomId": {
            "type": "integer",
            "format": "int32"
          },
          "originTitle": {
            "type": "string",
            "nullable": true
          },
          "originRoomTitle": {
            "type": "string",
            "nullable": true
          },
          "canShare": {
            "type": "boolean"
          },
          "security": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "folderId": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "versionGroup": {
            "type": "integer",
            "format": "int32"
          },
          "contentLength": {
            "type": "string",
            "nullable": true
          },
          "pureContentLength": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fileStatus": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileStatus"
          },
          "mute": {
            "type": "boolean"
          },
          "viewUrl": {
            "type": "string",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "nullable": true
          },
          "fileType": {
            "$ref": "#/components/schemas/ASC.Web.Core.Files.FileType"
          },
          "fileExst": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "encrypted": {
            "type": "boolean",
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "thumbnailStatus": {
            "$ref": "#/components/schemas/ASC.Files.Core.Thumbnail"
          },
          "locked": {
            "type": "boolean",
            "nullable": true
          },
          "lockedBy": {
            "type": "string",
            "nullable": true
          },
          "denyDownload": {
            "type": "boolean"
          },
          "denySharing": {
            "type": "boolean"
          },
          "viewAccessibility": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "nullable": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "Operation": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "processed": {
            "type": "string",
            "nullable": true
          },
          "finished": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileShareDto": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "sharedTo": {
            "nullable": true
          },
          "isLocked": {
            "type": "boolean"
          },
          "isOwner": {
            "type": "boolean"
          },
          "canEditAccess": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "nullable": true
          },
          "current": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "pathParts": {
            "nullable": true
          },
          "startIndex": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "new": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "nullable": true
          },
          "current": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "pathParts": {
            "nullable": true
          },
          "startIndex": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "new": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "nullable": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "rootFolderId": {
            "type": "integer",
            "format": "int32"
          },
          "originId": {
            "type": "integer",
            "format": "int32"
          },
          "originRoomId": {
            "type": "integer",
            "format": "int32"
          },
          "originTitle": {
            "type": "string",
            "nullable": true
          },
          "originRoomTitle": {
            "type": "string",
            "nullable": true
          },
          "canShare": {
            "type": "boolean"
          },
          "security": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "filesCount": {
            "type": "integer",
            "format": "int32"
          },
          "foldersCount": {
            "type": "integer",
            "format": "int32"
          },
          "isShareable": {
            "type": "boolean",
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean",
            "nullable": true
          },
          "new": {
            "type": "integer",
            "format": "int32"
          },
          "mute": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.Logo"
          },
          "pinned": {
            "type": "boolean"
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean"
          },
          "inRoom": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderDto`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "nullable": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "rootFolderId": {
            "type": "string",
            "nullable": true
          },
          "originId": {
            "type": "string",
            "nullable": true
          },
          "originRoomId": {
            "type": "string",
            "nullable": true
          },
          "originTitle": {
            "type": "string",
            "nullable": true
          },
          "originRoomTitle": {
            "type": "string",
            "nullable": true
          },
          "canShare": {
            "type": "boolean"
          },
          "security": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "filesCount": {
            "type": "integer",
            "format": "int32"
          },
          "foldersCount": {
            "type": "integer",
            "format": "int32"
          },
          "isShareable": {
            "type": "boolean",
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean",
            "nullable": true
          },
          "new": {
            "type": "integer",
            "format": "int32"
          },
          "mute": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.Logo"
          },
          "pinned": {
            "type": "boolean"
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean"
          },
          "inRoom": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.LinkType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
            },
            "nullable": true
          },
          "warning": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.AuthData": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.AutoCleanUpData": {
        "type": "object",
        "properties": {
          "isAutoCleanUp": {
            "type": "boolean"
          },
          "gap": {
            "$ref": "#/components/schemas/ASC.Files.Core.DateToAutoCleanUp"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.Core.ApplyFilterOption": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.Core.SubjectFilter": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.DateToAutoCleanUp": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.EditHistoryAuthor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.EditHistoryDataDto": {
        "type": "object",
        "properties": {
          "changesUrl": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "previous": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryUrl"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "fileType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.EditHistoryUrl": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "fileType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.EntryProperties": {
        "type": "object",
        "properties": {
          "formFilling": {
            "$ref": "#/components/schemas/ASC.Files.Core.FormFillingProperties"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.FileStatus": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.FilterType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.FolderType": {
        "enum": [
          0,
          1,
          2,
          3,
          5,
          6,
          8,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.FormFillingProperties": {
        "type": "object",
        "properties": {
          "collectFillForm": {
            "type": "boolean"
          },
          "toFolderId": {
            "type": "string",
            "nullable": true
          },
          "toFolderPath": {
            "type": "string",
            "nullable": true
          },
          "createFolderTitle": {
            "type": "string",
            "nullable": true
          },
          "createFileMask": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.Helpers.DocumentService+FileLink": {
        "type": "object",
        "properties": {
          "filetype": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.OrderBy": {
        "type": "object",
        "properties": {
          "is_asc": {
            "type": "boolean"
          },
          "property": {
            "$ref": "#/components/schemas/ASC.Files.Core.SortedByType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ProviderFilter": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.Security.FileShare": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.Security.ShareFilterType": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          15
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.Security.Status": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.SortedByType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.Thumbnail": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.VirtualRooms.Logo": {
        "type": "object",
        "properties": {
          "original": {
            "type": "string",
            "nullable": true
          },
          "large": {
            "type": "string",
            "nullable": true
          },
          "medium": {
            "type": "string",
            "nullable": true
          },
          "small": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.VirtualRooms.SearchArea": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Web.Api.Models.EmployeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "avatarSmall": {
            "type": "string",
            "nullable": true
          },
          "profileUrl": {
            "type": "string",
            "nullable": true
          },
          "hasAvatar": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Files.FileType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Web.Files.Classes.FilesSettingsHelper": {
        "type": "object",
        "properties": {
          "extsImagePreviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsMediaPreviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsWebPreviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsWebEdited": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsWebEncrypt": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsWebReviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsWebCustomFilterEditing": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsWebRestrictedEditing": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsWebCommented": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsWebTemplate": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsCoAuthoring": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsMustConvert": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsConvertible": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          },
          "extsUploadable": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsArchive": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsVideo": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsAudio": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsImage": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsSpreadsheet": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsPresentation": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "extsDocument": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "internalFormats": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "readOnly": true
          },
          "masterFormExtension": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "paramVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "paramOutType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fileDownloadUrlString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fileWebViewerUrlString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fileWebViewerExternalUrlString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fileWebEditorUrlString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fileWebEditorExternalUrlString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fileRedirectPreviewUrlString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fileThumbnailUrlString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "confirmDelete": {
            "type": "boolean"
          },
          "enableThirdParty": {
            "type": "boolean"
          },
          "externalShare": {
            "type": "boolean"
          },
          "externalShareSocialMedia": {
            "type": "boolean"
          },
          "storeOriginalFiles": {
            "type": "boolean"
          },
          "keepNewFileName": {
            "type": "boolean"
          },
          "updateIfExist": {
            "type": "boolean"
          },
          "convertNotify": {
            "type": "boolean"
          },
          "hideConfirmConvertSave": {
            "type": "boolean"
          },
          "hideConfirmConvertOpen": {
            "type": "boolean"
          },
          "defaultOrder": {
            "$ref": "#/components/schemas/ASC.Files.Core.OrderBy"
          },
          "forcesave": {
            "type": "boolean"
          },
          "storeForcesave": {
            "type": "boolean"
          },
          "recentSection": {
            "type": "boolean"
          },
          "favoritesSection": {
            "type": "boolean"
          },
          "templatesSection": {
            "type": "boolean"
          },
          "downloadTarGz": {
            "type": "boolean"
          },
          "automaticallyCleanUp": {
            "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
          },
          "canSearchByContent": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultSharingAccessRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
            },
            "nullable": true
          },
          "chunkUploadSize": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Core.Compress.ICompress": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "archiveExtension": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Core.Entries.EncryptionKeyPairDto": {
        "type": "object",
        "properties": {
          "privateKeyEnc": {
            "type": "string",
            "nullable": true
          },
          "publicKey": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.ActionLinkConfig": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.ActionLinkConfig+ActionConfig"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.ActionLinkConfig+ActionConfig": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.CoEditingConfig": {
        "type": "object",
        "properties": {
          "change": {
            "type": "boolean"
          },
          "fast": {
            "type": "boolean"
          },
          "mode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.Configuration`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.DocumentConfig`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "documentType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "editorConfig": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorConfiguration`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "editorType": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
          },
          "editorUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Error": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.CustomerConfig`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "logo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mail": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "www": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.CustomerConfig`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "logo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mail": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "www": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.CustomizationConfig`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "about": {
            "type": "boolean",
            "readOnly": true
          },
          "customer": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CustomerConfig`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "feedback": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FeedbackConfig"
          },
          "forcesave": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "goback": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.GobackConfig"
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.LogoConfig`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "mentionShare": {
            "type": "boolean",
            "readOnly": true
          },
          "reviewDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "submitForm": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.CustomizationConfig`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "about": {
            "type": "boolean",
            "readOnly": true
          },
          "customer": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CustomerConfig`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "feedback": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FeedbackConfig"
          },
          "forcesave": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "goback": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.GobackConfig"
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.LogoConfig`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "mentionShare": {
            "type": "boolean",
            "readOnly": true
          },
          "reviewDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "submitForm": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.DocumentConfig`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "fileType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "info": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.InfoConfig`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "isLinkedForMe": {
            "type": "boolean"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.PermissionsConfig"
          },
          "sharedLinkParam": {
            "type": "string",
            "nullable": true
          },
          "sharedLinkKey": {
            "type": "string",
            "nullable": true
          },
          "referenceData": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.DocumentConfig`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "fileType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "info": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.InfoConfig`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "isLinkedForMe": {
            "type": "boolean"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.PermissionsConfig"
          },
          "sharedLinkParam": {
            "type": "string",
            "nullable": true
          },
          "sharedLinkKey": {
            "type": "string",
            "nullable": true
          },
          "referenceData": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.EditorConfiguration`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "actionLink": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.ActionLinkConfig"
          },
          "actionLinkString": {
            "type": "string",
            "nullable": true
          },
          "callbackUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "coEditing": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CoEditingConfig"
          },
          "createUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customization": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CustomizationConfig`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "embedded": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EmbeddedConfig"
          },
          "encryptionKeys": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig"
          },
          "fileChoiceUrl": {
            "type": "string",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modeWrite": {
            "type": "boolean"
          },
          "plugins": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.PluginsConfig"
          },
          "recent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.RecentConfig"
            },
            "nullable": true,
            "readOnly": true
          },
          "saveAsUrl": {
            "type": "string",
            "nullable": true
          },
          "sharingSettingsUrl": {
            "type": "string",
            "nullable": true
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.TemplatesConfig"
            },
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.UserConfig"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.EditorConfiguration`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "actionLink": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.ActionLinkConfig"
          },
          "actionLinkString": {
            "type": "string",
            "nullable": true
          },
          "callbackUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "coEditing": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CoEditingConfig"
          },
          "createUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customization": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CustomizationConfig`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "embedded": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EmbeddedConfig"
          },
          "encryptionKeys": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig"
          },
          "fileChoiceUrl": {
            "type": "string",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modeWrite": {
            "type": "boolean"
          },
          "plugins": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.PluginsConfig"
          },
          "recent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.RecentConfig"
            },
            "nullable": true,
            "readOnly": true
          },
          "saveAsUrl": {
            "type": "string",
            "nullable": true
          },
          "sharingSettingsUrl": {
            "type": "string",
            "nullable": true
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.TemplatesConfig"
            },
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.UserConfig"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.EditorType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Web.Files.Services.DocumentService.EmbeddedConfig": {
        "type": "object",
        "properties": {
          "embedUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "saveUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "shareLinkParam": {
            "type": "string",
            "nullable": true
          },
          "shareUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "toolbarDocked": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig": {
        "type": "object",
        "properties": {
          "cryptoEngineId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "privateKeyEnc": {
            "type": "string",
            "nullable": true
          },
          "publicKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FeedbackConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FileReferenceData`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "integer",
            "format": "int32"
          },
          "instanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FileReferenceData`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FileReference`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "referenceData": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "fileType": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.GobackConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.InfoConfig`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "boolean",
            "nullable": true
          },
          "folder": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "owner": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "sharingSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.AceShortWrapper"
            },
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
          },
          "uploaded": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.InfoConfig`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "boolean",
            "nullable": true
          },
          "folder": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "owner": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "sharingSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.AceShortWrapper"
            },
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
          },
          "uploaded": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.LogoConfig`1[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageDark": {
            "type": "string",
            "nullable": true
          },
          "imageEmbedded": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.LogoConfig`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageDark": {
            "type": "string",
            "nullable": true
          },
          "imageEmbedded": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.PermissionsConfig": {
        "type": "object",
        "properties": {
          "changeHistory": {
            "type": "boolean"
          },
          "comment": {
            "type": "boolean"
          },
          "download": {
            "type": "boolean"
          },
          "edit": {
            "type": "boolean"
          },
          "fillForms": {
            "type": "boolean"
          },
          "modifyFilter": {
            "type": "boolean"
          },
          "print": {
            "type": "boolean"
          },
          "rename": {
            "type": "boolean"
          },
          "review": {
            "type": "boolean"
          },
          "copy": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.PluginsConfig": {
        "type": "object",
        "properties": {
          "pluginsData": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.RecentConfig": {
        "type": "object",
        "properties": {
          "folder": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.TemplatesConfig": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.UserConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.AceShortWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "string",
            "nullable": true
          },
          "isLink": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.FileOperations.FileConflictResolveType": {
        "enum": [
          "Skip",
          "Overwrite",
          "Duplicate"
        ],
        "type": "string"
      },
      "ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Web.Files.Services.WCFService.MentionMessageWrapper": {
        "type": "object",
        "properties": {
          "actionLink": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.ActionLinkConfig"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.MentionWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ASC.Core.Users.UserInfo"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "hasAccess": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.ThirdPartyParams": {
        "type": "object",
        "properties": {
          "auth_data": {
            "$ref": "#/components/schemas/ASC.Files.Core.AuthData"
          },
          "corporate": {
            "type": "boolean"
          },
          "roomsStorage": {
            "type": "boolean"
          },
          "customer_title": {
            "type": "string",
            "nullable": true
          },
          "provider_id": {
            "type": "string",
            "nullable": true
          },
          "provider_key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "System.Collections.Generic.KeyValuePair`2[[System.Boolean, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "key": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "System.Collections.Generic.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[Microsoft.Extensions.Primitives.StringValues, Microsoft.Extensions.Primitives, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "System.IO.Stream": {
        "type": "object",
        "properties": {
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "canSeek": {
            "type": "boolean",
            "readOnly": true
          },
          "canTimeout": {
            "type": "boolean",
            "readOnly": true
          },
          "length": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "position": {
            "type": "integer",
            "format": "int64"
          },
          "readTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "writeTimeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "System.Net.Mime.ContentDisposition": {
        "type": "object",
        "properties": {
          "dispositionType": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "inline": {
            "type": "boolean"
          },
          "readDate": {
            "type": "string",
            "format": "date-time"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "System.Net.Mime.ContentType": {
        "type": "object",
        "properties": {
          "boundary": {
            "type": "string",
            "nullable": true
          },
          "charSet": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "microseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nanoseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMicroseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalNanoseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}