{
  "openapi": "3.0.1",
  "info": {
    "title": "ASC.Web.Api",
    "version": "v1"
  },
  "paths": {
    "/api/2.0/Authentication": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Checks if the current user is authenticated or not.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticates the current user by SMS, authenticator app, or without two-factor authentication.",
        "requestBody": {
          "description": "Authentication request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Authentication/{code}": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticates the current user by SMS or two-factor authentication code.",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Authentication request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Authentication/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logs out of the current user account.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logs out of the current user account.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Authentication/confirm": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Opens a confirmation email URL to validate a certain action (employee invitation, portal removal, phone activation, etc.).",
        "requestBody": {
          "description": "Confirmation email parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Security.Cryptography.EmailValidationKeyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Security.Cryptography.EmailValidationKeyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Security.Cryptography.EmailValidationKeyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ConfirmDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ConfirmDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ConfirmDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Authentication/setphone": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sets a mobile phone for the current user.",
        "requestBody": {
          "description": "Mobile phone request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MobileRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MobileRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MobileRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Authentication/sendsms": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sends SMS with an authentication code.",
        "requestBody": {
          "description": "Authentication request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Capabilities": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "Returns the information about portal capabilities.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Capabilities{.format}": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "Returns the information about portal capabilities.",
        "parameters": [
          {
            "name": ".format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Feed/read": {
      "put": {
        "tags": [
          "Feed"
        ],
        "summary": "Opens feeds for reading.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Feed/filter": {
      "get": {
        "tags": [
          "Feed"
        ],
        "summary": "Returns a list of feeds that are filtered by the parameters specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Entity ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product",
            "in": "query",
            "description": "Product which feeds you want to read",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "module",
            "in": "query",
            "description": "Feeds of the module that will be searched for by entity ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Time from which the feeds should be displayed",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Time until which the feeds should be displayed",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          },
          {
            "name": "author",
            "in": "query",
            "description": "Author whose feeds you want to read",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "onlyNew",
            "in": "query",
            "description": "Displays only fresh feeds",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withRelated",
            "in": "query",
            "description": "Includes the associated feeds related to the entity with the specified ID",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "timeReaded",
            "in": "query",
            "description": "Time when the feeds were read",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Feed/newfeedscount": {
      "get": {
        "tags": [
          "Feed"
        ],
        "summary": "Returns an integer representing the number of fresh feeds.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Modules": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Returns a list of all the portal modules.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Modules/info": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Returns a list of all the portal modules with their information.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Api.Core.Module"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Api.Core.Module"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Api.Core.Module"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/portal/payment/url": {
      "put": {
        "tags": [
          "portal"
        ],
        "summary": "Returns the URL to the payment page.",
        "requestBody": {
          "description": "Payment URL request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PaymentUrlRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PaymentUrlRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PaymentUrlRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/portal/payment/update": {
      "put": {
        "tags": [
          "portal"
        ],
        "summary": "Updates the quantity of payment.",
        "requestBody": {
          "description": "Payment URL request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PaymentUrlRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PaymentUrlRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PaymentUrlRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/portal/payment/account": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Returns the URL to the payment account.",
        "parameters": [
          {
            "name": "backUrl",
            "in": "query",
            "description": "Back URL",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/portal/payment/prices": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Returns the available portal prices.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/portal/payment/currencies": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Returns the available portal currencies.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CurrenciesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CurrenciesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CurrenciesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/portal/payment/quotas": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Returns the available portal quotas.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.QuotaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.QuotaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.QuotaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/portal/payment/quota": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Returns the payment information about the current portal quota.",
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.QuotaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.QuotaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.QuotaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/portal/payment/request": {
      "post": {
        "tags": [
          "portal"
        ],
        "summary": "Sends a request for portal payment.",
        "requestBody": {
          "description": "Portal payment request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.SalesRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.SalesRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.SalesRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns the current portal.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Portal/users/{userID}": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns a user with the ID specified in the request from the current portal.",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Users.UserInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Users.UserInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Users.UserInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Portal/users/invite/{employeeType}": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns an invitation link for joining the portal.",
        "parameters": [
          {
            "name": "employeeType",
            "in": "path",
            "description": "Employee type (All, RoomAdmin, User, DocSpaceAdmin)",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/getshortenlink": {
      "put": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns a link specified in the request in the shortened format.",
        "requestBody": {
          "description": "Shortened link request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.ShortenLinkRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.ShortenLinkRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.ShortenLinkRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/tenantextra": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns an extra tenant license for the portal.",
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "description": "Specifies whether the tariff will be refreshed",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantExtraDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantExtraDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantExtraDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Portal/usedspace": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns the used space of the current portal.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Portal/userscount": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns a number of portal users.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Portal/tariff": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns the current portal tariff.",
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "description": "Specifies whether the tariff will be refreshed",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Billing.Tariff"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Billing.Tariff"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Billing.Tariff"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Portal/quota": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns the current portal quota.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Portal/quota/right": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns the recommended quota for the current portal.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Portal/path": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns the full absolute path to the current portal.",
        "parameters": [
          {
            "name": "virtualPath",
            "in": "query",
            "description": "Portal virtual path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/thumb": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Returns a thumbnail of the bookmark URL specified in the request.",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "Bookmark URL",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/present/mark": {
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Marks a gift message as read.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/mobile/registration": {
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Registers the mobile app installation.",
        "requestBody": {
          "description": "Mobile app request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MobileAppRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MobileAppRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MobileAppRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/portalrename": {
      "put": {
        "tags": [
          "Portal"
        ],
        "summary": "Updates a portal name with a new one specified in the request.",
        "requestBody": {
          "description": "Request parameters for portal renaming",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.PortalRenameRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.PortalRenameRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.PortalRenameRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/deleteportalimmediately": {
      "delete": {
        "tags": [
          "Portal"
        ],
        "summary": "Deletes the current portal immediately.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/suspend": {
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Sends the instructions to suspend the current portal.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Portal"
        ],
        "summary": "Deactivates the current portal.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/delete": {
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Sends the instructions to remove the current portal.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Portal"
        ],
        "summary": "Deletes the current portal.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/continue": {
      "put": {
        "tags": [
          "Portal"
        ],
        "summary": "Restores the current portal.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Portal/sendcongratulations": {
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Sends congratulations to the user after registering the portal.",
        "parameters": [
          {
            "name": "Userid",
            "in": "query",
            "description": "Uer ID,e",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "description": "Email key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/security/activeconnections": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Returns all the active connections to the portal.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/security/activeconnections/logoutallchangepassword": {
      "put": {
        "tags": [
          "security"
        ],
        "summary": "Logs out from all the active connections of the current user and changes their password.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/security/activeconnections/logoutall/{userId}": {
      "put": {
        "tags": [
          "security"
        ],
        "summary": "Logs out from all the active connections of the user with the ID specified in the request.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/security/activeconnections/logoutallexceptthis": {
      "put": {
        "tags": [
          "security"
        ],
        "summary": "Logs out from all the active connections except the current connection.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/security/activeconnections/logout/{loginEventId}": {
      "put": {
        "tags": [
          "security"
        ],
        "summary": "Logs out from the connection with the ID specified in the request.",
        "parameters": [
          {
            "name": "loginEventId",
            "in": "path",
            "description": "Login event ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Security/audit/login/last": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Returns all the latest user login activity, including successful logins and error logs.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Security/audit/events/last": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Returns a list of the latest changes (creation, modification, deletion, etc.) made by users to the entities (tasks, opportunities, files, etc.) on the portal.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/audit/login/filter": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Returns a list of the login events by the parameters specified in the request.",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Action",
            "schema": {
              "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/audit/events/filter": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Returns a list of the audit events by the parameters specified in the request.",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "productType",
            "in": "query",
            "description": "Product",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.ProductType"
            }
          },
          {
            "name": "moduleType",
            "in": "query",
            "description": "Module",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.ModuleType"
            }
          },
          {
            "name": "actionType",
            "in": "query",
            "description": "Action type",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.ActionType"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Action",
            "schema": {
              "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
            }
          },
          {
            "name": "entryType",
            "in": "query",
            "description": "Entry",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.EntryType"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Security/audit/types": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Returns all the available audit trail types.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/audit/mappers": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Returns the mappers for the audit trail types.",
        "parameters": [
          {
            "name": "productType",
            "in": "query",
            "description": "Product",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.ProductType"
            }
          },
          {
            "name": "moduleType",
            "in": "query",
            "description": "Module",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.ModuleType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Security/audit/login/report": {
      "post": {
        "tags": [
          "Security"
        ],
        "summary": "Generates the login history report.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Security/audit/events/report": {
      "post": {
        "tags": [
          "Security"
        ],
        "summary": "Generates the audit trail report.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/Security/audit/settings/lifetime": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Returns the audit trail settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Security"
        ],
        "summary": "Sets the audit trail settings for the current portal.",
        "requestBody": {
          "description": "Audit trail settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettingsWrapper"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettingsWrapper"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettingsWrapper"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/Security/csp": {
      "post": {
        "tags": [
          "Security"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CspRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CspRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CspRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Security"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/push/docregisterdevice": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the Firebase device token specified in the request for the Documents application.",
        "requestBody": {
          "description": "Firebase request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/push/docsubscribe": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Subscribes to the Documents push notification.",
        "requestBody": {
          "description": "Firebase request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/customnavigation/getall": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of the custom navigation items.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/customnavigation/getsample": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a custom navigation item sample.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/customnavigation/get/{id}": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a custom navigation item by the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Custom navigation item ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/customnavigation/create": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Adds a custom navigation item with the parameters specified in the request.",
        "requestBody": {
          "description": "Custom navigation parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/customnavigation/delete/{id}": {
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Deletes a custom navigation item with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Custom navigation item ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/customschemas": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns all portal team templates that allow users to name their organization (or group), add members, and define their activities within the portal.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the names from the team template with the ID specified in the request.",
        "requestBody": {
          "description": "Team template parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Creates a custom team template with the parameters specified in the request.",
        "requestBody": {
          "description": "Team template parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/customschemas/{id}": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a team template by the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team template ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/greetingsettings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the greeting settings for the current portal.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the greeting settings specified in the request to the current portal.",
        "requestBody": {
          "description": "Greeting settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.GreetingSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.GreetingSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.GreetingSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/greetingsettings/isdefault": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Checks if the greeting settings of the current portal are set to default or not.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/greetingsettings/restore": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Restores the current portal greeting settings.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/iprestrictions": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the IP portal restrictions.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.IPSecurity.IPRestriction"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.IPSecurity.IPRestriction"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.IPSecurity.IPRestriction"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the new portal IP restrictions specified in the request.",
        "requestBody": {
          "description": "IP restrictions request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.IPSecurity.IpRestrictionBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.IPSecurity.IpRestrictionBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.IPSecurity.IpRestrictionBase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/iprestrictions/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the IP restriction settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the IP restriction settings with a parameter specified in the request.",
        "requestBody": {
          "description": "New IP restriction settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/ldap": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the current portal LDAP settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapSettingsDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the LDAP settings specified in the request and starts importing/synchronizing users and groups by LDAP.",
        "requestBody": {
          "description": "LDAP settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LdapRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LdapRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LdapRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/ldap/cron": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the LDAP autosynchronous cron expression for the current portal if it exists.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapCronSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapCronSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapCronSettingsDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Sets the LDAP autosynchronous cron expression to the current portal.",
        "requestBody": {
          "description": "LDAP cron request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LdapCronRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LdapCronRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LdapCronRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/ldap/sync": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Synchronizes the portal data with the new information from the LDAP server.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/ldap/sync/test": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Starts the process of collecting preliminary changes on the portal during the synchronization process according to the selected LDAP settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/ldap/save/test": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Starts the process of saving LDAP settings and collecting preliminary changes on the portal according to them.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/ldap/status": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the LDAP synchronization process status.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/ldap/default": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the LDAP default settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LdapSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/license/refresh": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Refreshes the license.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/license/accept": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Activates a license for the portal.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/license/trial": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Activates a trial license for the portal.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/license/required": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Requests a portal license if necessary.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/license": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Uploads a portal license specified in the request.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "License attachments"
                  }
                }
              },
              "encoding": {
                "Files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/messagesettings": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Displays the contact form on the \"Sign In\" page, allowing users to send a message to the DocSpace administrator in case they encounter any issues while accessing DocSpace.",
        "requestBody": {
          "description": "Request parameters for administrator message settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/cookiesettings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the cookies lifetime value in minutes.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CookieSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CookieSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CookieSettingsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the cookies lifetime value in minutes.",
        "requestBody": {
          "description": "Cookies settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.CookieSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.CookieSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.CookieSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/sendadmmail": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Sends a message to the administrator email when unauthorized users encounter issues accessing DocSpace.",
        "requestBody": {
          "description": "Request parameters for administrator message settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/sendjoininvite": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Sends an invitation email with a link to the DocSpace.",
        "requestBody": {
          "description": "Request parameters for administrator message settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/notification/{type}": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Checks if the notification type specified in the request is enabled or not.",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Notification type (Badges, RoomsActivity, DailyFeed, UsefullTips)",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ASC.Web.Core.Notify.NotificationType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/notification": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Enables the notification type specified in the request.",
        "requestBody": {
          "description": "Notification settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.NotificationSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.NotificationSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.NotificationSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/notification/rooms": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of rooms with the disabled notifications",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificayionSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificayionSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificayionSettingsDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Sets a notification status for a room with the ID specified in the request.",
        "requestBody": {
          "description": "Request parameters for the room notification settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.RoomsNotificationsSettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.RoomsNotificationsSettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.RoomsNotificationsSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificayionSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificayionSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificayionSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/owner": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Sends the instructions to change the DocSpace owner.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the current portal owner with a new one specified in the request.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/carddavurl": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Creates a CardDav address book for a user with all portal users and returns a link to this address book.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Common.Radicale.DavResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Common.Radicale.DavResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Common.Radicale.DavResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/deletebook": {
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Deletes a CardDav address book with all portal users.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Common.Radicale.DavResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Common.Radicale.DavResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Common.Radicale.DavResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/security": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the security settings for the modules specified in the request.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "List of module IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Sets the security settings to the module with the ID specified in the request.",
        "requestBody": {
          "description": "Module request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/security/{id}": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the availability of the module with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Module ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/security/modules": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of all the enabled modules.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/security/password": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the portal password settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.PasswordSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.PasswordSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.PasswordSettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Sets the portal password settings.",
        "requestBody": {
          "description": "Password settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PasswordSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PasswordSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PasswordSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.PasswordSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.PasswordSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.PasswordSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/security/access": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Sets the access settings to the products with the IDs specified in the request.",
        "requestBody": {
          "description": "Module request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/security/administrator/{productid}": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of all the product administrators with the ID specified in the request.",
        "parameters": [
          {
            "name": "productid",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/security/administrator": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Checks if the selected user is a product administrator with the ID specified in the request.",
        "parameters": [
          {
            "name": "productid",
            "in": "query",
            "description": "Product ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userid",
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Sets the selected user as a product administrator with the ID specified in the request.",
        "requestBody": {
          "description": "Security request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SecurityRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SecurityRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SecurityRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/security/loginSettings": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the login settings with the parameters specified in the request.",
        "requestBody": {
          "description": "Login settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LoginSettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LoginSettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LoginSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the portal login settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of all the available portal settings with the current values for each parameter.",
        "parameters": [
          {
            "name": "withpassword",
            "in": "query",
            "description": "Specifies if the password hasher settings will be returned or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/maildomainsettings": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the mail domain settings specified in the request to the portal.",
        "requestBody": {
          "description": "Request parameters for mail domain settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MailDomainSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MailDomainSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MailDomainSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/quota": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the space usage quota for the portal.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.QuotaUsageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.QuotaUsageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.QuotaUsageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/userquotasettings": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the user quota settings specified in the request to the current portal.",
        "requestBody": {
          "description": "Request parameters for the user quota settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.UserQuotaSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.UserQuotaSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.UserQuotaSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/cultures": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of all the available portal languages in the format of a two-letter or four-letter language code (e.g. \"de\", \"en-US\", etc.).",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/timezones": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of all the available portal time zones.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TimezonesRequestsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TimezonesRequestsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TimezonesRequestsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/machine": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the portal hostname.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/dns": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the DNS settings specified in the request to the current portal.",
        "requestBody": {
          "description": "DNS settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.DnsSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.DnsSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.DnsSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/recalculatequota": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Starts the process of quota recalculation.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/checkrecalculatequota": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Checks the process of quota recalculation.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/logo": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the portal logo image URL.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/wizard/complete": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Completes the Wizard settings.",
        "requestBody": {
          "description": "Wizard settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WizardRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WizardRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WizardRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.WizardSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.WizardSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.WizardSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/welcome/close": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Closes the welcome pop-up notification.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/colortheme": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the portal color theme.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the portal color theme specified in the request.",
        "requestBody": {
          "description": "Portal theme settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CustomColorThemesSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CustomColorThemesSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CustomColorThemesSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Deletes the portal color theme with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Portal theme ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/closeadminhelper": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Closes the admin helper notification.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/timeandlanguage": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Sets the portal time zone and language specified in the request.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/defaultpage": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Sets the default product page.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/emailactivation": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the email activation settings.",
        "requestBody": {
          "description": "Email activation settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/statistics/spaceusage/{id}": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the space usage statistics of the module with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Module ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.UsageSpaceStatItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.UsageSpaceStatItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.UsageSpaceStatItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/statistics/visit": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the user visit statistics for the period specified in the request.",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Start period date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "End period date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.ChartPointDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.ChartPointDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.ChartPointDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/socket": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the socket settings.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/authservice": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the authorization services.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the authorization keys.",
        "requestBody": {
          "description": "Request parameters for authorization service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/payment": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the portal payment settings.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/telegramlink": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a link that will connect TelegramBot to your account.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/telegramisconnected": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Checks if the user has connected to TelegramBot.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/telegramdisconnect": {
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Unlinks TelegramBot from your account.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/ssov2": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the current portal SSO settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the SSO settings for the current portal.",
        "requestBody": {
          "description": "SSO settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SsoSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SsoSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SsoSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Resets the SSO settings of the current portal.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/ssov2/default": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the default portal SSO settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/ssov2/constants": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the SSO settings constants.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/storage": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of all the portal storages.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates a storage with the parameters specified in the request.",
        "requestBody": {
          "description": "Storage settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.StorageSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.StorageSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.StorageSettings"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Resets the storage settings to the default parameters.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/storage/progress": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the storage progress.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/encryption/start": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Starts the storage encryption process.",
        "requestBody": {
          "description": "Storage encryption request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageEncryptionRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageEncryptionRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageEncryptionRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/encryption/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the storage encryption settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Encryption.EncryptionSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Encryption.EncryptionSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Encryption.EncryptionSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/encryption/progress": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the storage encryption progress.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/storage/cdn": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of all the CDN storages.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the CDN storage with the parameters specified in the request.",
        "requestBody": {
          "description": "CDN storage settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.CdnStorageSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.CdnStorageSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.CdnStorageSettings"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Resets the CDN storage settings to the default parameters.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/storage/backup": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of all the backup storages.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/storage/s3/regions": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of all Amazon regions.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/tfaapp": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the current two-factor authentication settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaSettingsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaSettingsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaSettingsDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the two-factor authentication settings with the parameters specified in the request.",
        "requestBody": {
          "description": "TFA settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/tfaapp/validate": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Validates the two-factor authentication code specified in the request.",
        "requestBody": {
          "description": "TFA validation request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaValidateRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaValidateRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaValidateRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/tfaapp/confirm": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the confirmation email URL for authorization via SMS or TFA application.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/tfaappwithlink": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the confirmation email URL for updating TFA settings.",
        "requestBody": {
          "description": "TFA settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/tfaapp/setup": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Generates the setup TFA code for the current user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Google.Authenticator.SetupCode"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Google.Authenticator.SetupCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Google.Authenticator.SetupCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/tfaappcodes": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the two-factor authentication application codes.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/tfaappnewcodes": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Requests the new backup codes for the two-factor authentication application.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/tfaappnewapp": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Unlinks the current two-factor authentication application from the user account specified in the request.",
        "requestBody": {
          "description": "TFA settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/tips": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the tip settings with a parameter specified in the request.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.TipsSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.TipsSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.TipsSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/tips/change/subscription": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the tip subscription.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/tips/subscription": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Checks if the current user is subscribed to the tips or not.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/version/build": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the current build version.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.BuildVersion"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.BuildVersion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.BuildVersion"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/version": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of the available portal versions including the current version.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.TenantVersionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.TenantVersionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.TenantVersionDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Sets a version with the ID specified in the request to the current tenant.",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.TenantVersionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.TenantVersionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.TenantVersionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/webhook": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns a list of the tenant webhooks.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigWithStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigWithStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigWithStatusDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Creates a new tenant webhook with the parameters specified in the request.",
        "requestBody": {
          "description": "Webhook request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the tenant webhook with the parameters specified in the request.",
        "requestBody": {
          "description": "New webhook request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/webhook/{id}": {
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Removes the tenant webhook with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Disables a webhook with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/webhooks/log": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the logs of the webhook activities.",
        "parameters": [
          {
            "name": "deliveryFrom",
            "in": "query",
            "description": "Delivey start time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "deliveryTo",
            "in": "query",
            "description": "Delivey end time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "hookUri",
            "in": "query",
            "description": "Hook URI",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhookId",
            "in": "query",
            "description": "Webhook ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "configId",
            "in": "query",
            "description": "Config ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "eventId",
            "in": "query",
            "description": "Event ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupStatus",
            "in": "query",
            "description": "Webhook group status",
            "schema": {
              "$ref": "#/components/schemas/ASC.Webhooks.Core.WebhookGroupStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/webhook/{id}/retry": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Retries a webhook with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/webhook/retry": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Retries all the webhooks with the IDs specified in the request.",
        "requestBody": {
          "description": "Request parameters to retry webhooks",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhookRetryRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhookRetryRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhookRetryRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/webhooks": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns settings of all webhooks.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/webplugins": {
      "post": {
        "tags": [
          "settings"
        ],
        "parameters": [
          {
            "name": "system",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "settings"
        ],
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/webplugins/{name}": {
      "get": {
        "tags": [
          "settings"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebPluginRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebPluginRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebPluginRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "settings"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/whitelabel/save": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the white label settings specified in the request.",
        "requestBody": {
          "description": "Request parameters for white label settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WhiteLabelRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WhiteLabelRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WhiteLabelRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/whitelabel/savefromfiles": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the white label settings from files.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/whitelabel/logos": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the white label logos.",
        "parameters": [
          {
            "name": "IsDark",
            "in": "query",
            "description": "Specifies if the logo is for a dark theme or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/whitelabel/logos/isdefault": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Specifies if the white label logos are default or not.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.IsDefaultWhiteLabelLogosDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.IsDefaultWhiteLabelLogosDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.IsDefaultWhiteLabelLogosDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/whitelabel/logotext": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the white label logo text.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/settings/whitelabel/restore": {
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Restores the white label options.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/companywhitelabel": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the licensor data.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/rebranding/company": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the company white label settings specified in the request.",
        "requestBody": {
          "description": "Company white label settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettingsWrapper"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettingsWrapper"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettingsWrapper"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the company white label settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CompanyWhiteLabelSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CompanyWhiteLabelSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CompanyWhiteLabelSettingsDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Deletes the company white label settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/rebranding/additional": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the additional white label settings specified in the request.",
        "requestBody": {
          "description": "Additional white label settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettingsWrapper"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettingsWrapper"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettingsWrapper"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the additional white label settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.AdditionalWhiteLabelSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.AdditionalWhiteLabelSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.AdditionalWhiteLabelSettingsDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Deletes the additional white label settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/rebranding/mail": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Saves the mail white label settings specified in the request.",
        "requestBody": {
          "description": "Mail white label settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.MailWhiteLabelSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.MailWhiteLabelSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.MailWhiteLabelSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Updates the mail white label settings with a paramater specified in the request.",
        "requestBody": {
          "description": "Request parameters for mail white label settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MailWhiteLabelSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MailWhiteLabelSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MailWhiteLabelSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Returns the mail white label settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.MailWhiteLabelSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.MailWhiteLabelSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.MailWhiteLabelSettings"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Deletes the mail white label settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.MailWhiteLabelSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.MailWhiteLabelSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.MailWhiteLabelSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/settings/enableWhitelabel": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Checks if the white label is enabled or not.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/SmtpSettings/smtp": {
      "get": {
        "tags": [
          "SmtpSettings"
        ],
        "summary": "Returns the current portal SMTP settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SmtpSettings"
        ],
        "summary": "Saves the SMTP settings for the current portal.",
        "requestBody": {
          "description": "SMTP settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SmtpSettings"
        ],
        "summary": "Resets the SMTP settings of the current portal.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/SmtpSettings/smtp/test": {
      "get": {
        "tags": [
          "SmtpSettings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/SmtpSettings/smtp/test/status": {
      "get": {
        "tags": [
          "SmtpSettings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/ThirdParty/{provider}": {
      "get": {
        "tags": [
          "ThirdParty"
        ],
        "summary": "Returns a request to get the confirmation code from URL.",
        "description": "List of providers: Google, Dropbox, Docusign, Box, OneDrive, Wordpress.",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "Provider",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ASC.FederatedLogin.LoginProviders.LoginProvider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/2.0/ThirdParty/{provider}/code": {
      "get": {
        "tags": [
          "ThirdParty"
        ],
        "summary": "Returns the confirmation code for requesting an OAuth token.",
        "parameters": [
          {
            "name": "redirect",
            "in": "query",
            "description": "URL where the user will be redirected to after they have granted the application access",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Confirmation code that can be exchanged for an OAuth token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error",
            "in": "query",
            "description": "Error",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ASC.Api.Collections.ItemKeyValuePair`2[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[ASC.Web.Api.ApiModel.RequestsDto.LogoRequestsDto, ASC.Web.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.LogoRequestsDto"
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Collections.ItemKeyValuePair`2[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Collections.ItemKeyValuePair`2[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Core.ApiDateTime": {
        "type": "object",
        "properties": {
          "utcTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "timeZoneOffset": {
            "$ref": "#/components/schemas/System.TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Core.Module": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "appName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "helpUrl": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Settings.BuildVersion": {
        "type": "object",
        "properties": {
          "docSpace": {
            "type": "string",
            "description": "DocSpace version",
            "nullable": true
          },
          "communityServer": {
            "type": "string",
            "description": "Community Server version",
            "nullable": true
          },
          "documentServer": {
            "type": "string",
            "description": "Document Server version",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean",
            "description": "Specifies if the SMTP operation is completed or not"
          },
          "id": {
            "type": "string",
            "description": "SMTP operation ID",
            "nullable": true
          },
          "error": {
            "type": "string",
            "description": "SMTP operation error",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "SMTP operation status",
            "nullable": true
          },
          "percents": {
            "type": "integer",
            "description": "Percentage of SMTP operation completion",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.AuditTrail.Types.ActionType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.AuditTrail.Types.EntryType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.AuditTrail.Types.ModuleType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.AuditTrail.Types.ProductType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Common.Radicale.DavResponse": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Billing.License": {
        "type": "object",
        "properties": {
          "originalLicense": {
            "type": "string",
            "nullable": true
          },
          "customization": {
            "type": "boolean"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "trial": {
            "type": "boolean"
          },
          "customer_id": {
            "type": "string",
            "nullable": true
          },
          "users_count": {
            "type": "integer",
            "format": "int32"
          },
          "users_expire": {
            "type": "integer",
            "format": "int32"
          },
          "connections": {
            "type": "integer",
            "format": "int32"
          },
          "signature": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Billing.Quota": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Billing.Tariff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "$ref": "#/components/schemas/ASC.Core.Billing.TariffState"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "delayDueDate": {
            "type": "string",
            "format": "date-time"
          },
          "licenseDate": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "quotas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Core.Billing.Quota"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Billing.TariffState": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Common.EF.FireBaseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "firebaseDeviceToken": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "type": "string",
            "nullable": true
          },
          "isSubscribed": {
            "type": "boolean",
            "nullable": true
          },
          "tenant": {
            "$ref": "#/components/schemas/ASC.Core.Common.EF.Model.DbTenant"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Common.EF.Model.DbTenant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "mappedDomain": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "version_Changed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "versionChanged": {
            "type": "string",
            "format": "date-time"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "trustedDomainsRaw": {
            "type": "string",
            "nullable": true
          },
          "trustedDomainsEnabled": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType"
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantStatus"
          },
          "statusChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusChangedHack": {
            "type": "string",
            "format": "date-time"
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "industry": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantIndustry"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "spam": {
            "type": "boolean"
          },
          "calls": {
            "type": "boolean"
          },
          "partner": {
            "$ref": "#/components/schemas/ASC.Core.Common.EF.Model.DbTenantPartner"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Common.EF.Model.DbTenantPartner": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "partnerId": {
            "type": "string",
            "nullable": true
          },
          "affiliateId": {
            "type": "string",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "nullable": true
          },
          "tenant": {
            "$ref": "#/components/schemas/ASC.Core.Common.EF.Model.DbTenant"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Common.Notify.Push.MobileAppType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Encryption.EncryprtionStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Encryption.EncryptionSettings": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Encryption.EncryprtionStatus"
          },
          "notifyUsers": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.TenantVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantAuditSettings": {
        "type": "object",
        "properties": {
          "loginHistoryLifeTime": {
            "type": "integer",
            "format": "int32"
          },
          "auditTrailLifeTime": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantAuditSettingsWrapper": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantDomainValidator": {
        "type": "object",
        "properties": {
          "regex": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantIndustry": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Tenants.TenantQuota": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "priceCurrencySymbol": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean"
          },
          "features": {
            "type": "string",
            "nullable": true
          },
          "maxFileSize": {
            "type": "integer",
            "format": "int64"
          },
          "maxTotalSize": {
            "type": "integer",
            "format": "int64"
          },
          "countUser": {
            "type": "integer",
            "format": "int32"
          },
          "countRoomAdmin": {
            "type": "integer",
            "format": "int32"
          },
          "usersInRoom": {
            "type": "integer",
            "format": "int32"
          },
          "countRoom": {
            "type": "integer",
            "format": "int32"
          },
          "nonProfit": {
            "type": "boolean"
          },
          "trial": {
            "type": "boolean"
          },
          "free": {
            "type": "boolean"
          },
          "update": {
            "type": "boolean"
          },
          "audit": {
            "type": "boolean"
          },
          "docsEdition": {
            "type": "boolean"
          },
          "ldap": {
            "type": "boolean"
          },
          "sso": {
            "type": "boolean"
          },
          "whiteLabel": {
            "type": "boolean"
          },
          "customization": {
            "type": "boolean"
          },
          "custom": {
            "type": "boolean"
          },
          "autoBackupRestore": {
            "type": "boolean"
          },
          "oauth": {
            "type": "boolean"
          },
          "contentSearch": {
            "type": "boolean"
          },
          "thirdParty": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Tenants.TenantTrustedDomainsType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Users.EmployeeActivationStatus": {
        "enum": [
          0,
          1,
          2,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Users.EmployeeStatus": {
        "enum": [
          1,
          2,
          4,
          5,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Users.EmployeeType": {
        "enum": [
          "All",
          "RoomAdmin",
          "User",
          "DocSpaceAdmin",
          "Collaborator"
        ],
        "type": "string"
      },
      "ASC.Core.Users.MobilePhoneActivationStatus": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Users.UserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sex": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
          },
          "terminatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "workFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "contacts": {
            "type": "string",
            "nullable": true
          },
          "contactsList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "removed": {
            "type": "boolean"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "cultureName": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "mobilePhoneActivationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus"
          },
          "sid": {
            "type": "string",
            "nullable": true
          },
          "ldapQouta": {
            "type": "integer",
            "format": "int64"
          },
          "ssoNameId": {
            "type": "string",
            "nullable": true
          },
          "ssoSessionId": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkActivation": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Data.Storage.Configuration.CdnStorageSettings": {
        "type": "object",
        "properties": {
          "module": {
            "type": "string",
            "nullable": true
          },
          "props": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "switch": {
            "$ref": "#/components/schemas/System.Func`2[[ASC.Core.Common.Configuration.DataStoreConsumer, ASC.Core.Common, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null],[ASC.Core.Common.Configuration.DataStoreConsumer, ASC.Core.Common, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null]]"
          }
        },
        "additionalProperties": false
      },
      "ASC.Data.Storage.Configuration.StorageSettings": {
        "type": "object",
        "properties": {
          "module": {
            "type": "string",
            "nullable": true
          },
          "props": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "switch": {
            "$ref": "#/components/schemas/System.Func`2[[ASC.Core.Common.Configuration.DataStoreConsumer, ASC.Core.Common, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null],[ASC.Core.Common.Configuration.DataStoreConsumer, ASC.Core.Common, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null]]"
          }
        },
        "additionalProperties": false
      },
      "ASC.FederatedLogin.LoginProviders.LoginProvider": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.IPSecurity.IPRestriction": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "nullable": true
          },
          "forAdmin": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ASC.IPSecurity.IPRestrictionsSettings": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.IPSecurity.IpRestrictionBase": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "nullable": true
          },
          "forAdmin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.MessagingSystem.Core.MessageAction": {
        "enum": [
          1000,
          1001,
          1002,
          1003,
          1004,
          1005,
          1006,
          1007,
          1008,
          1009,
          1010,
          1011,
          1012,
          1013,
          1014,
          1015,
          1016,
          1017,
          1018,
          1019,
          1020,
          1021,
          1022,
          1023,
          1024,
          1025,
          1026,
          4000,
          4001,
          4002,
          4003,
          4004,
          4005,
          4006,
          4007,
          4008,
          4009,
          4010,
          4011,
          4012,
          4013,
          4014,
          4015,
          4016,
          4017,
          4018,
          4019,
          4020,
          4021,
          4022,
          4023,
          4024,
          4025,
          4026,
          4027,
          4028,
          4029,
          4030,
          4031,
          4032,
          4033,
          4034,
          4035,
          4036,
          5000,
          5001,
          5002,
          5003,
          5004,
          5005,
          5006,
          5007,
          5008,
          5009,
          5010,
          5011,
          5012,
          5013,
          5014,
          5015,
          5016,
          5017,
          5018,
          5019,
          5020,
          5021,
          5022,
          5023,
          5024,
          5025,
          5026,
          5027,
          5028,
          5029,
          5030,
          5031,
          5032,
          5033,
          5034,
          5035,
          5036,
          5037,
          5038,
          5039,
          5040,
          5041,
          5042,
          5043,
          5044,
          5045,
          5046,
          5047,
          5048,
          5049,
          5050,
          5051,
          5052,
          5053,
          5054,
          5055,
          5056,
          5057,
          5058,
          5059,
          5060,
          5061,
          5062,
          5063,
          5064,
          5065,
          5066,
          5068,
          5069,
          5070,
          5071,
          5072,
          5073,
          5074,
          5075,
          5076,
          5077,
          5078,
          5079,
          5080,
          5081,
          5082,
          5083,
          5084,
          5085,
          5086,
          5087,
          5088,
          5089,
          5090,
          6000,
          6001,
          6002,
          6003,
          6004,
          6005,
          6006,
          6007,
          6008,
          6009,
          6010,
          6011,
          6012,
          6013,
          6014,
          6015,
          6016,
          6017,
          6018,
          6019,
          6020,
          6021,
          6022,
          6023,
          6024,
          6025,
          6026,
          6027,
          6028,
          6029,
          6030,
          6031,
          6032,
          6033,
          6034,
          6035,
          6036,
          6037,
          6038,
          7000,
          7001,
          7002,
          7003,
          7004,
          -1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Security.Cryptography.EmailValidationKeyModel": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "emplType": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "uiD": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Studio.Utility.ConfirmType"
          },
          "roomId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Security.Cryptography.EmailValidationKeyProvider+ValidationResult": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Security.Cryptography.PasswordHasher": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "iterations": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "salt": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message",
            "nullable": true
          },
          "turnOn": {
            "type": "boolean",
            "description": "Specifies if the administrator messages are enabled or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "Username / email",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true
          },
          "passwordHash": {
            "type": "string",
            "description": "Password hash",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "description": "Provider type",
            "nullable": true
          },
          "accessToken": {
            "type": "string",
            "description": "Provider access token",
            "nullable": true
          },
          "serializedProfile": {
            "type": "string",
            "description": "Serialized user profile",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Two-factor authentication code",
            "nullable": true
          },
          "codeOAuth": {
            "type": "string",
            "description": "Code for getting a token",
            "nullable": true
          },
          "session": {
            "type": "boolean",
            "description": "Session based authentication or not"
          },
          "confirmData": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.ConfirmData"
          },
          "recaptchaResponse": {
            "type": "string",
            "description": "reCAPTCHA response",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "instruction": {
            "type": "string",
            "description": "Instruction",
            "nullable": true
          },
          "canSet": {
            "type": "boolean",
            "description": "Specifies if the authentication service can be set or not"
          },
          "props": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.AuthKey"
            },
            "description": "List of authorization keys",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.ConfirmData": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address",
            "nullable": true
          },
          "module": {
            "type": "string",
            "description": "Module",
            "nullable": true
          },
          "first": {
            "type": "boolean",
            "description": "Access an account for the first time or not",
            "nullable": true
          },
          "sms": {
            "type": "boolean",
            "description": "Sends SMS code or not",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.GreetingSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Tenant name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto": {
        "type": "object",
        "properties": {
          "ipRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.IPSecurity.IpRestrictionBase"
            },
            "description": "List of IP addresses",
            "nullable": true
          },
          "enable": {
            "type": "boolean",
            "description": "Enables IP restrictions or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.LogoRequestsDto": {
        "type": "object",
        "properties": {
          "light": {
            "type": "string",
            "description": "Light theme logo",
            "nullable": true
          },
          "dark": {
            "type": "string",
            "description": "Dark theme logo",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.MailDomainSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of trusted domains",
            "nullable": true
          },
          "inviteUsersAsVisitors": {
            "type": "boolean",
            "description": "Invites as a user or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.MailWhiteLabelSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "footerEnabled": {
            "type": "boolean",
            "description": "Specifies if the mail footer will be enabled or note"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.MobileAppRequestsDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ASC.Core.Common.Notify.Push.MobileAppType"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.MobileRequestsDto": {
        "type": "object",
        "properties": {
          "mobilePhone": {
            "type": "string",
            "description": "Mobile phone",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team template ID",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Team template name",
            "nullable": true
          },
          "userCaption": {
            "type": "string",
            "description": "User caption",
            "nullable": true
          },
          "usersCaption": {
            "type": "string",
            "description": "Users caption",
            "nullable": true
          },
          "groupCaption": {
            "type": "string",
            "description": "Group caption",
            "nullable": true
          },
          "groupsCaption": {
            "type": "string",
            "description": "Groups caption",
            "nullable": true
          },
          "userPostCaption": {
            "type": "string",
            "description": "User status caption",
            "nullable": true
          },
          "regDateCaption": {
            "type": "string",
            "description": "Registration date caption",
            "nullable": true
          },
          "groupHeadCaption": {
            "type": "string",
            "description": "Group lead caption",
            "nullable": true
          },
          "guestCaption": {
            "type": "string",
            "description": "Guest caption",
            "nullable": true
          },
          "guestsCaption": {
            "type": "string",
            "description": "Guests caption",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.SecurityRequestsDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product ID",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "format": "uuid"
          },
          "administrator": {
            "type": "boolean",
            "description": "Administrator or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.SettingsRequestsDto": {
        "type": "object",
        "properties": {
          "defaultProductID": {
            "type": "string",
            "description": "Default product ID",
            "format": "uuid"
          },
          "lng": {
            "type": "string",
            "description": "Language",
            "nullable": true
          },
          "timeZoneID": {
            "type": "string",
            "description": "Time zone ID",
            "nullable": true
          },
          "theme": {
            "type": "string",
            "description": "Theme",
            "nullable": true
          },
          "show": {
            "type": "boolean",
            "description": "Specifies whether to show tips for the user or not"
          },
          "versionId": {
            "type": "integer",
            "description": "Version ID",
            "format": "int32"
          },
          "ownerId": {
            "type": "string",
            "description": "Owner ID",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.ShortenLinkRequestsDto": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string",
            "description": "Link",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.SsoSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "serializeSettings": {
            "type": "string",
            "description": "Serialized SSO settings",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.StorageEncryptionRequestsDto": {
        "type": "object",
        "properties": {
          "notifyUsers": {
            "type": "boolean",
            "description": "Specifies if the users will be notified about the encryption process or note"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto": {
        "type": "object",
        "properties": {
          "module": {
            "type": "string",
            "description": "Storage name",
            "nullable": true
          },
          "props": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Api.Collections.ItemKeyValuePair`2[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
            },
            "description": "Storage properties",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "TFA type (None, Sms, or App)",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "User ID",
            "format": "uuid",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "trustedIps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of trusted IP addresses",
            "nullable": true
          },
          "mandatoryUsers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of users who must use the TFA verification",
            "nullable": true
          },
          "mandatoryGroups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of groups who must use the TFA verification",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TfaSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the TFA settings are enabled or not"
          },
          "avaliable": {
            "type": "boolean",
            "description": "Specifies if the TFA settings are available or not"
          },
          "trustedIps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of trusted IP addresses",
            "nullable": true
          },
          "mandatoryUsers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of users who must use the TFA verification",
            "nullable": true
          },
          "mandatoryGroups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of groups who must use the TFA verification",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TfaValidateRequestsDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "TFA code",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TimezonesRequestsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Time zone ID",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "Time zone display name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.UserQuotaSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "enableUserQuota": {
            "type": "boolean",
            "description": "Specifies if the quota settings are enabled or not"
          },
          "defaultUserQuota": {
            "type": "integer",
            "description": "Default user quota",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Module ID",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the module security settings are enabled or not"
          },
          "subjects": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user/group IDs with the access to the module",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Api.Collections.ItemKeyValuePair`2[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
            },
            "description": "Products with security information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.WebPluginRequestsDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "settings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.RequestsDto.WhiteLabelRequestsDto": {
        "type": "object",
        "properties": {
          "logoText": {
            "type": "string",
            "description": "Logo text",
            "nullable": true
          },
          "logo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Api.Collections.ItemKeyValuePair`2[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[ASC.Web.Api.ApiModel.RequestsDto.LogoRequestsDto, ASC.Web.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            },
            "description": "Tenant IDs with their logos (light or dark)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.WizardRequestsDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "passwordHash": {
            "type": "string",
            "description": "Password hash",
            "nullable": true
          },
          "lng": {
            "type": "string",
            "description": "Language",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone",
            "nullable": true
          },
          "amiId": {
            "type": "string",
            "description": "AMI ID",
            "nullable": true
          },
          "subscribeFromSite": {
            "type": "boolean",
            "description": "Subscribed from the site or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32"
          },
          "date": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "user": {
            "type": "string",
            "description": "User",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "format": "uuid"
          },
          "action": {
            "type": "string",
            "description": "Action",
            "nullable": true
          },
          "actionId": {
            "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
          },
          "ip": {
            "type": "string",
            "description": "IP",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "browser": {
            "type": "string",
            "description": "Browser",
            "nullable": true
          },
          "platform": {
            "type": "string",
            "description": "Platform",
            "nullable": true
          },
          "page": {
            "type": "string",
            "description": "Page",
            "nullable": true
          },
          "actionType": {
            "$ref": "#/components/schemas/ASC.AuditTrail.Types.ActionType"
          },
          "product": {
            "$ref": "#/components/schemas/ASC.AuditTrail.Types.ProductType"
          },
          "module": {
            "$ref": "#/components/schemas/ASC.AuditTrail.Types.ModuleType"
          },
          "target": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of targets",
            "nullable": true
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.EntryType"
            },
            "description": "List of entry types",
            "nullable": true
          },
          "context": {
            "type": "string",
            "description": "Context",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication token",
            "nullable": true
          },
          "expires": {
            "type": "string",
            "description": "Token expiration time",
            "format": "date-time"
          },
          "sms": {
            "type": "boolean",
            "description": "Specifies if the authentication code is sent by SMS or not"
          },
          "phoneNoise": {
            "type": "string",
            "description": "Phone number",
            "nullable": true
          },
          "tfa": {
            "type": "boolean",
            "description": "Specifies if the two-factor application is used or not"
          },
          "tfaKey": {
            "type": "string",
            "description": "Two-factor authentication key",
            "nullable": true
          },
          "confirmUrl": {
            "type": "string",
            "description": "Confirmation email URL",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto": {
        "type": "object",
        "properties": {
          "ldapEnabled": {
            "type": "boolean",
            "description": "Specifies if the LDAP settings are enabled or not"
          },
          "providers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of providers",
            "nullable": true
          },
          "ssoLabel": {
            "type": "string",
            "description": "SP login label",
            "nullable": true
          },
          "oauthEnabled": {
            "type": "boolean",
            "description": "Specifies if OAuth is enabled or not"
          },
          "ssoUrl": {
            "type": "string",
            "description": "SSO URL. If this parameter is empty, then the SSO settings are disabled",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.ChartPointDto": {
        "type": "object",
        "properties": {
          "displayDate": {
            "type": "string",
            "description": "Display date",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Date",
            "format": "date-time"
          },
          "hosts": {
            "type": "integer",
            "description": "Hosts",
            "format": "int32"
          },
          "hits": {
            "type": "integer",
            "description": "Hits",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.DeepLinkDto": {
        "type": "object",
        "properties": {
          "androidPackageName": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "iosPackageId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.FirebaseDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "API key",
            "nullable": true
          },
          "authDomain": {
            "type": "string",
            "description": "Authentication domain",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "description": "Project ID",
            "nullable": true
          },
          "storageBucket": {
            "type": "string",
            "description": "Storage bucket",
            "nullable": true
          },
          "messagingSenderId": {
            "type": "string",
            "description": "Message sender ID",
            "nullable": true
          },
          "appId": {
            "type": "string",
            "description": "Application ID",
            "nullable": true
          },
          "measurementId": {
            "type": "string",
            "description": "Measurement ID",
            "nullable": true
          },
          "databaseURL": {
            "type": "string",
            "description": "Database URL",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.FormGalleryDto": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "ext": {
            "type": "string",
            "nullable": true
          },
          "uploadPath": {
            "type": "string",
            "nullable": true
          },
          "uploadDomain": {
            "type": "string",
            "nullable": true
          },
          "uploadExt": {
            "type": "string",
            "nullable": true
          },
          "uploadDashboard": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32"
          },
          "date": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "user": {
            "type": "string",
            "description": "User",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "format": "uuid"
          },
          "login": {
            "type": "string",
            "description": "Login",
            "nullable": true
          },
          "action": {
            "type": "string",
            "description": "Action",
            "nullable": true
          },
          "actionId": {
            "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
          },
          "ip": {
            "type": "string",
            "description": "IP",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "browser": {
            "type": "string",
            "description": "Browser",
            "nullable": true
          },
          "platform": {
            "type": "string",
            "description": "Platform",
            "nullable": true
          },
          "page": {
            "type": "string",
            "description": "Page",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.PluginsDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the plugins are enabled or not"
          },
          "upload": {
            "type": "boolean",
            "description": "Specifies if the plugins can be uploaded or not"
          },
          "delete": {
            "type": "boolean",
            "description": "Specifies if the plugins can be deleted or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.QuotaUsage": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the storage",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Storage size",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.QuotaUsageDto": {
        "type": "object",
        "properties": {
          "storageSize": {
            "type": "integer",
            "description": "Storage size",
            "format": "int64"
          },
          "maxFileSize": {
            "type": "integer",
            "description": "Maximum file size",
            "format": "int64"
          },
          "usedSize": {
            "type": "integer",
            "description": "Used size",
            "format": "int64"
          },
          "maxRoomAdminsCount": {
            "type": "integer",
            "description": "maximum number of room administrators",
            "format": "int32"
          },
          "roomAdminCount": {
            "type": "integer",
            "description": "Number of room administrators",
            "format": "int32"
          },
          "availableSize": {
            "type": "integer",
            "description": "Available size",
            "format": "int64"
          },
          "availableUsersCount": {
            "type": "integer",
            "description": "Available number of users",
            "format": "int32"
          },
          "storageUsage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.QuotaUsage"
            },
            "description": "Storage usage",
            "nullable": true
          },
          "userStorageSize": {
            "type": "integer",
            "description": "User storage size",
            "format": "int64"
          },
          "userUsedSize": {
            "type": "integer",
            "description": "User used size",
            "format": "int64"
          },
          "userAvailableSize": {
            "type": "integer",
            "description": "User available size",
            "format": "int64"
          },
          "maxUsers": {
            "type": "integer",
            "description": "Maximum number of users",
            "format": "int64"
          },
          "usersCount": {
            "type": "integer",
            "description": "Number of users",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.SecurityDto": {
        "type": "object",
        "properties": {
          "webItemId": {
            "type": "string",
            "description": "Module ID",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
            },
            "description": "List of users with the access to the module",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.GroupSummaryDto"
            },
            "description": "List of groups with the access to the module",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the security settings are enabled or not"
          },
          "isSubItem": {
            "type": "boolean",
            "description": "Specifies if this module is a subitem or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.SettingsDto": {
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "description": "Time zone",
            "nullable": true
          },
          "trustedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of trusted domains",
            "nullable": true
          },
          "trustedDomainsType": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType"
          },
          "culture": {
            "type": "string",
            "description": "Language",
            "nullable": true
          },
          "utcOffset": {
            "$ref": "#/components/schemas/System.TimeSpan"
          },
          "utcHoursOffset": {
            "type": "number",
            "description": "UTC hours offset",
            "format": "double"
          },
          "greetingSettings": {
            "type": "string",
            "description": "Greeting settings",
            "nullable": true
          },
          "ownerId": {
            "type": "string",
            "description": "Owner ID",
            "format": "uuid"
          },
          "nameSchemaId": {
            "type": "string",
            "description": "Team template ID",
            "nullable": true
          },
          "enabledJoin": {
            "type": "boolean",
            "description": "Specifies if a user can join to the portal or not",
            "nullable": true
          },
          "enableAdmMess": {
            "type": "boolean",
            "description": "Specifies if a user can send a message to the administrator or not",
            "nullable": true
          },
          "thirdpartyEnable": {
            "type": "boolean",
            "description": "Specifies if a user can connect third-party providers or not",
            "nullable": true
          },
          "personal": {
            "type": "boolean",
            "description": "Specifies if this is a Personal portal or not"
          },
          "docSpace": {
            "type": "boolean",
            "description": "Specifies if this is a DocSpace portal or not"
          },
          "standalone": {
            "type": "boolean",
            "description": "Specifies if this is a standalone portal or not"
          },
          "baseDomain": {
            "type": "string",
            "description": "Base domain",
            "nullable": true
          },
          "wizardToken": {
            "type": "string",
            "description": "Wizard token",
            "nullable": true
          },
          "passwordHash": {
            "$ref": "#/components/schemas/ASC.Security.Cryptography.PasswordHasher"
          },
          "firebase": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.FirebaseDto"
          },
          "version": {
            "type": "string",
            "description": "Version",
            "nullable": true
          },
          "recaptchaPublicKey": {
            "type": "string",
            "description": "ReCAPTCHA public key",
            "nullable": true
          },
          "debugInfo": {
            "type": "boolean",
            "description": "Specifies if the debug information will be sent or not"
          },
          "socketUrl": {
            "type": "string",
            "description": "Socket URL",
            "nullable": true
          },
          "tenantStatus": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantStatus"
          },
          "tenantAlias": {
            "type": "string",
            "description": "Tenant alias",
            "nullable": true
          },
          "helpLink": {
            "type": "string",
            "description": "Link to the help",
            "nullable": true
          },
          "forumLink": {
            "type": "string",
            "description": "Link to the forum",
            "nullable": true
          },
          "apiDocsLink": {
            "type": "string",
            "description": "API documentation link",
            "nullable": true
          },
          "domainValidator": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantDomainValidator"
          },
          "zendeskKey": {
            "type": "string",
            "description": "Zendesk key",
            "nullable": true
          },
          "bookTrainingEmail": {
            "type": "string",
            "description": "Email for training booking",
            "nullable": true
          },
          "documentationEmail": {
            "type": "string",
            "description": "Documentation email",
            "nullable": true
          },
          "legalTerms": {
            "type": "string",
            "description": "Legal terms",
            "nullable": true
          },
          "cookieSettingsEnabled": {
            "type": "boolean",
            "description": "Specifies whether the cookie settings are enabled"
          },
          "userNameRegex": {
            "type": "string",
            "description": "User name validation regex",
            "nullable": true
          },
          "plugins": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.PluginsDto"
          },
          "deepLink": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.DeepLinkDto"
          },
          "formGallery": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.FormGalleryDto"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "Host",
            "nullable": true,
            "example": "mail.example.com"
          },
          "port": {
            "type": "integer",
            "description": "Port",
            "format": "int32",
            "nullable": true,
            "example": 25
          },
          "senderAddress": {
            "type": "string",
            "description": "Sender address",
            "nullable": true,
            "example": "notify@example.com"
          },
          "senderDisplayName": {
            "type": "string",
            "description": "Sender display name",
            "nullable": true,
            "example": "Postman"
          },
          "credentialsUserName": {
            "type": "string",
            "description": "Credentials username",
            "nullable": true,
            "example": "notify@example.com"
          },
          "credentialsUserPassword": {
            "type": "string",
            "description": "Credentials user password",
            "nullable": true,
            "example": "{password}"
          },
          "enableSSL": {
            "type": "boolean",
            "description": "Enables SSL or not",
            "example": true
          },
          "enableAuth": {
            "type": "boolean",
            "description": "Enables authentication or not",
            "example": false
          },
          "useNtlm": {
            "type": "boolean",
            "description": "Specifies whether to use NTLM or not",
            "example": false
          },
          "isDefaultSettings": {
            "type": "boolean",
            "description": "Specifies if the current settings are default or not",
            "example": false
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.StorageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.AuthKey"
            },
            "description": "List of authentication keys",
            "nullable": true
          },
          "current": {
            "type": "boolean",
            "description": "Specifies if this is the current storage or not"
          },
          "isSet": {
            "type": "boolean",
            "description": "Specifies if this storage can be set or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.TenantVersionDto": {
        "type": "object",
        "properties": {
          "current": {
            "type": "integer",
            "description": "Current portal version",
            "format": "int32"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Core.TenantVersion"
            },
            "description": "List of available portal versions",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.ResponseDto.UsageSpaceStatItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "description": "Icon",
            "nullable": true
          },
          "disabled": {
            "type": "boolean",
            "description": "Specifies if the module space is disabled or not"
          },
          "size": {
            "type": "string",
            "description": "Size",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.CspRequestsDto": {
        "type": "object",
        "properties": {
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "setDefaultIfEmpty": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.RequestsDto.CustomColorThemesSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsItem"
          },
          "selected": {
            "type": "integer",
            "description": "Selected or not",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto": {
        "type": "object",
        "properties": {
          "firebaseDeviceToken": {
            "type": "string",
            "description": "Firebase device token",
            "nullable": true
          },
          "isSubscribed": {
            "type": "boolean",
            "description": "Specifies if the user is subscribed to the push notification or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.LdapCronRequestDto": {
        "type": "object",
        "properties": {
          "cron": {
            "type": "string",
            "description": "Cron expression",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.LdapRequestsDto": {
        "type": "object",
        "properties": {
          "enableLdapAuthentication": {
            "type": "boolean",
            "description": "Specifies if the LDAP authentication is enabled or not"
          },
          "startTls": {
            "type": "boolean",
            "description": "Specifies if the StartTLS is enabled or not"
          },
          "ssl": {
            "type": "boolean",
            "description": "Specifies if the SSL is enabled or not"
          },
          "sendWelcomeEmail": {
            "type": "boolean",
            "description": "Specifies if the welcome email is sent or not"
          },
          "server": {
            "type": "string",
            "description": "LDAP server URL address",
            "nullable": true
          },
          "userDN": {
            "type": "string",
            "description": "Absolute path to the top level directory containing users for the import",
            "nullable": true
          },
          "portNumber": {
            "type": "integer",
            "description": "Port number",
            "format": "int32"
          },
          "userFilter": {
            "type": "string",
            "description": "User filter value to import the users who correspond to the specified search criteria. The default filter value (uid=*) allows importing all users",
            "nullable": true
          },
          "loginAttribute": {
            "type": "string",
            "description": "Attribute in a user record that corresponds to the login that LDAP server users will use to log in to ONLYOFFICE",
            "nullable": true
          },
          "ldapMapping": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Correspondence between the user data fields on the portal and the attributes in the LDAP server user record",
            "nullable": true
          },
          "accessRights": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Group access rights",
            "nullable": true
          },
          "groupMembership": {
            "type": "boolean",
            "description": "Specifies if the groups from the LDAP server are added to the portal or not"
          },
          "groupDN": {
            "type": "string",
            "description": "The absolute path to the top level directory containing groups for the import",
            "nullable": true
          },
          "userAttribute": {
            "type": "string",
            "description": "Attribute that determines whether this user is a member of the groups",
            "nullable": true
          },
          "groupFilter": {
            "type": "string",
            "description": "Group filter value to import the groups who correspond to the specified search criteria. The default filter value (objectClass=posixGroup) allows importing all users",
            "nullable": true
          },
          "groupAttribute": {
            "type": "string",
            "description": "Attribute that specifies the users that the group includes",
            "nullable": true
          },
          "groupNameAttribute": {
            "type": "string",
            "description": "Attribute that corresponds to a name of the group where the user is included",
            "nullable": true
          },
          "authentication": {
            "type": "boolean",
            "description": "Specifies if the user has rights to read data from LDAP server or not"
          },
          "login": {
            "type": "string",
            "description": "Login",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true
          },
          "acceptCertificate": {
            "type": "boolean",
            "description": "Specifies if the certificate is accepted or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.LoginSettingsRequestDto": {
        "type": "object",
        "properties": {
          "attemptCount": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of the user attempts to log in",
            "format": "int32"
          },
          "blockTime": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "The duration of the account suspension for unsuccessful login attempts",
            "format": "int32"
          },
          "checkPeriod": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Expected server response time",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.NotificationSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Core.Notify.NotificationType"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies if the notification type is enabled or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.PortalRenameRequestsDto": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "description": "Portal name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.RoomsNotificationsSettingsRequestDto": {
        "type": "object",
        "properties": {
          "roomsId": {
            "type": "integer",
            "description": "Room ID",
            "format": "int32"
          },
          "mute": {
            "type": "boolean",
            "description": "Specifies if the room notifications are disabled or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.SalesRequestsDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "Username",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email address",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.WebhookRetryRequestsDto": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of webhook IDs",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "description": "URI",
            "format": "uri",
            "nullable": true
          },
          "secretKey": {
            "type": "string",
            "description": "Secret key",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Enabled or not",
            "nullable": true
          },
          "ssl": {
            "type": "boolean",
            "description": "SSL",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.AdditionalWhiteLabelSettingsDto": {
        "type": "object",
        "properties": {
          "startDocsEnabled": {
            "type": "boolean",
            "description": "Specifies if the start document is enabled or not"
          },
          "helpCenterEnabled": {
            "type": "boolean",
            "description": "Specifies if the help center is enabled or not"
          },
          "feedbackAndSupportEnabled": {
            "type": "boolean",
            "description": "Specifies if feedback and support are available or not"
          },
          "feedbackAndSupportUrl": {
            "type": "string",
            "description": "Feedback and support URL",
            "nullable": true
          },
          "userForumEnabled": {
            "type": "boolean",
            "description": "Specifies if the user forum is enabled or not"
          },
          "userForumUrl": {
            "type": "string",
            "description": "User forum URL",
            "nullable": true
          },
          "videoGuidesEnabled": {
            "type": "boolean",
            "description": "Specifies if the video guides are enabled or not"
          },
          "videoGuidesUrl": {
            "type": "string",
            "description": "Video guides URL",
            "nullable": true
          },
          "salesEmail": {
            "type": "string",
            "description": "Sales email",
            "nullable": true
          },
          "buyUrl": {
            "type": "string",
            "description": "URL to pay for the portal",
            "nullable": true
          },
          "licenseAgreementsEnabled": {
            "type": "boolean",
            "description": "Specifies if the license agreements are enabled or not"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Specifies if these settings are default or not"
          },
          "licenseAgreementsUrl": {
            "type": "string",
            "description": "License agreements URL",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.CompanyWhiteLabelSettingsDto": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "description": "Company name",
            "nullable": true
          },
          "site": {
            "type": "string",
            "description": "Site",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone number",
            "nullable": true
          },
          "isLicensor": {
            "type": "boolean",
            "description": "Specifies if a company is a licensor or not"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Specifies if these settings are default or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.ConfirmDto": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ASC.Security.Cryptography.EmailValidationKeyProvider+ValidationResult"
          },
          "roomId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.CookieSettingsDto": {
        "type": "object",
        "properties": {
          "lifeTime": {
            "type": "integer",
            "description": "Lifetime value in minutes",
            "format": "int32"
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the cookie settings are enabled or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.CspDto": {
        "type": "object",
        "properties": {
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "header": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.CurrenciesDto": {
        "type": "object",
        "properties": {
          "isoCountryCode": {
            "type": "string",
            "description": "ISO country code",
            "nullable": true
          },
          "isoCurrencySymbol": {
            "type": "string",
            "description": "ISO currency symbol",
            "nullable": true
          },
          "currencyNativeName": {
            "type": "string",
            "description": "Currency native name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto": {
        "type": "object",
        "properties": {
          "themes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsItem"
            },
            "description": "Room name",
            "nullable": true
          },
          "selected": {
            "type": "integer",
            "description": "Room name",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Room name",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.FeatureUsedDto": {
        "type": "object",
        "properties": {
          "value": {
            "description": "Value",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.IsDefaultWhiteLabelLogosDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "White label logo name",
            "nullable": true
          },
          "default": {
            "type": "boolean",
            "description": "Specifies if the white label logo is default or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.LdapCronSettingsDto": {
        "type": "object",
        "properties": {
          "cron": {
            "type": "string",
            "description": "Cron expression",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.LdapSettingsDto": {
        "type": "object",
        "properties": {
          "enableLdapAuthentication": {
            "type": "boolean",
            "description": "Specifies if the LDAP authentication is enabled or not"
          },
          "startTls": {
            "type": "boolean",
            "description": "Specifies if the StartTLS is enabled or not"
          },
          "ssl": {
            "type": "boolean",
            "description": "Specifies if the SSL is enabled or not"
          },
          "sendWelcomeEmail": {
            "type": "boolean",
            "description": "Specifies if the welcome email is sent or not"
          },
          "server": {
            "type": "string",
            "description": "LDAP server URL address",
            "nullable": true
          },
          "userDN": {
            "type": "string",
            "description": "Absolute path to the top level directory containing users for the import",
            "nullable": true
          },
          "portNumber": {
            "type": "integer",
            "description": "Port number",
            "format": "int32"
          },
          "userFilter": {
            "type": "string",
            "description": "User filter value to import the users who correspond to the specified search criteria. The default filter value (uid=*) allows importing all users",
            "nullable": true
          },
          "loginAttribute": {
            "type": "string",
            "description": "Attribute in a user record that corresponds to the login that LDAP server users will use to log in to ONLYOFFICE",
            "nullable": true
          },
          "ldapMapping": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Correspondence between the user data fields on the portal and the attributes in the LDAP server user record",
            "nullable": true
          },
          "accessRights": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Group access rights",
            "nullable": true
          },
          "groupMembership": {
            "type": "boolean",
            "description": "Specifies if the groups from the LDAP server are added to the portal or not"
          },
          "groupDN": {
            "type": "string",
            "description": "The absolute path to the top level directory containing groups for the import",
            "nullable": true
          },
          "userAttribute": {
            "type": "string",
            "description": "Attribute that determines whether this user is a member of the groups",
            "nullable": true
          },
          "groupFilter": {
            "type": "string",
            "description": "Group filter value to import the groups who correspond to the specified search criteria. The default filter value (objectClass=posixGroup) allows importing all users",
            "nullable": true
          },
          "groupAttribute": {
            "type": "string",
            "description": "Attribute that specifies the users that the group includes",
            "nullable": true
          },
          "groupNameAttribute": {
            "type": "string",
            "description": "Attribute that corresponds to a name of the group where the user is included",
            "nullable": true
          },
          "authentication": {
            "type": "boolean",
            "description": "Specifies if the user has rights to read data from LDAP server or not"
          },
          "login": {
            "type": "string",
            "description": "Login",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true
          },
          "acceptCertificate": {
            "type": "boolean",
            "description": "Specifies if the certificate is accepted or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.LdapStatusDto": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean",
            "description": "Specifies if the LDAP operation is completed or not"
          },
          "id": {
            "type": "string",
            "description": "ID",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status",
            "nullable": true
          },
          "error": {
            "type": "string",
            "description": "Error",
            "nullable": true
          },
          "warning": {
            "type": "string",
            "description": "Warning",
            "nullable": true
          },
          "percents": {
            "type": "integer",
            "description": "Percentage of completion",
            "format": "int32"
          },
          "certificateConfirmRequest": {
            "type": "string",
            "description": "Certificate confirmation request",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "Source",
            "nullable": true
          },
          "operationType": {
            "type": "string",
            "description": "Operation type",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto": {
        "type": "object",
        "properties": {
          "attemptCount": {
            "type": "integer",
            "description": "Maximum number of the user attempts to log in",
            "format": "int32"
          },
          "blockTime": {
            "type": "integer",
            "description": "The time for which the user will be blocked after unsuccessful login attempts",
            "format": "int32"
          },
          "checkPeriod": {
            "type": "integer",
            "description": "The time to wait for a response from the server",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Core.Notify.NotificationType"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies if the notification type is enabled or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.PriceDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Value",
            "format": "double",
            "nullable": true
          },
          "currencySymbol": {
            "type": "string",
            "description": "Currency symbol",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.QuotaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "price": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.PriceDto"
          },
          "nonProfit": {
            "type": "boolean",
            "description": "Specifies if the quota is nonprofit or not"
          },
          "free": {
            "type": "boolean",
            "description": "Specifies if the quota is free or not"
          },
          "trial": {
            "type": "boolean",
            "description": "Specifies if the quota is trial or not"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantQuotaFeatureDto"
            },
            "description": "List of quota features",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificayionSettingsDto": {
        "type": "object",
        "properties": {
          "disabledRooms": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of rooms with the disabled notifications",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.TenantDto": {
        "type": "object",
        "properties": {
          "affiliateId": {
            "type": "string",
            "description": "Affiliate ID",
            "nullable": true
          },
          "tenantAlias": {
            "type": "string",
            "description": "Tenant alias",
            "nullable": true
          },
          "calls": {
            "type": "boolean",
            "description": "Specifies if the calls are available for this tenant or not"
          },
          "campaign": {
            "type": "string",
            "description": "Campaign",
            "nullable": true
          },
          "creationDateTime": {
            "type": "string",
            "description": "Creation date and time",
            "format": "date-time",
            "readOnly": true
          },
          "hostedRegion": {
            "type": "string",
            "description": "Hosted region",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "description": "Tenant ID",
            "format": "int32",
            "readOnly": true
          },
          "industry": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantIndustry"
          },
          "language": {
            "type": "string",
            "description": "Language",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "description": "Last modified date",
            "format": "date-time"
          },
          "mappedDomain": {
            "type": "string",
            "description": "Mapped domain",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "ownerId": {
            "type": "string",
            "description": "Owner ID",
            "format": "uuid"
          },
          "paymentId": {
            "type": "string",
            "description": "Payment ID",
            "nullable": true
          },
          "spam": {
            "type": "boolean",
            "description": "Specifies if the ONLYOFFICE newsletter is allowed or not"
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantStatus"
          },
          "statusChangeDate": {
            "type": "string",
            "description": "The date and time when the tenant status was changed",
            "format": "date-time",
            "readOnly": true
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone",
            "nullable": true
          },
          "trustedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of trusted domains",
            "nullable": true
          },
          "trustedDomainsRaw": {
            "type": "string",
            "description": "Trusted domains in the string format",
            "nullable": true
          },
          "trustedDomainsType": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType"
          },
          "version": {
            "type": "integer",
            "description": "Version",
            "format": "int32"
          },
          "versionChanged": {
            "type": "string",
            "description": "The date and time when the tenant version was changed",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.TenantExtraDto": {
        "type": "object",
        "properties": {
          "customMode": {
            "type": "boolean",
            "description": "Specifies if the extra tenant license is customizable or not"
          },
          "opensource": {
            "type": "boolean",
            "description": "Specifies if the extra tenant license is Opensource or not"
          },
          "enterprise": {
            "type": "boolean",
            "description": "Specifies if the extra tenant license is Enterprise or not"
          },
          "tariff": {
            "$ref": "#/components/schemas/ASC.Core.Billing.Tariff"
          },
          "quota": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.QuotaDto"
          },
          "notPaid": {
            "type": "boolean",
            "description": "Specifies if the license is paid or not"
          },
          "licenseAccept": {
            "type": "string",
            "description": "The time when the license was accepted",
            "nullable": true
          },
          "enableTariffPage": {
            "type": "boolean",
            "description": "Specifies if the tariff page is enabled or not"
          },
          "docServerUserQuota": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "description": "Document server user quotas",
            "nullable": true
          },
          "docServerLicense": {
            "$ref": "#/components/schemas/ASC.Core.Billing.License"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.TenantQuotaFeatureDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "image": {
            "type": "string",
            "description": "Image URL",
            "nullable": true
          },
          "value": {
            "description": "Value",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type",
            "nullable": true
          },
          "used": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.FeatureUsedDto"
          },
          "priceTitle": {
            "type": "string",
            "description": "Price title",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "license": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "homePage": {
            "type": "string",
            "nullable": true
          },
          "pluginName": {
            "type": "string",
            "nullable": true
          },
          "scopes": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "createBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "createOn": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "system": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "description": "URI",
            "nullable": true
          },
          "secretKey": {
            "type": "string",
            "description": "Secret key",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the webhooks are enabled or not"
          },
          "ssl": {
            "type": "boolean",
            "description": "SSL"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigWithStatusDto": {
        "type": "object",
        "properties": {
          "configs": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32"
          },
          "configName": {
            "type": "string",
            "description": "Config name",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "description": "Creation time",
            "format": "date-time"
          },
          "method": {
            "type": "string",
            "description": "Method",
            "nullable": true
          },
          "route": {
            "type": "string",
            "description": "Route",
            "nullable": true
          },
          "requestHeaders": {
            "type": "string",
            "description": "Request headers",
            "nullable": true
          },
          "requestPayload": {
            "type": "string",
            "description": "Request payload",
            "nullable": true
          },
          "responseHeaders": {
            "type": "string",
            "description": "Response headers",
            "nullable": true
          },
          "responsePayload": {
            "type": "string",
            "description": "Response payload",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "Status",
            "format": "int32"
          },
          "delivery": {
            "type": "string",
            "description": "Delivery time",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "File name",
            "nullable": true
          },
          "size": {
            "$ref": "#/components/schemas/SixLabors.ImageSharp.Size"
          },
          "path": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemPathDto"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemPathDto": {
        "type": "object",
        "properties": {
          "light": {
            "type": "string",
            "description": "Path to the light theme logo",
            "nullable": true
          },
          "dark": {
            "type": "string",
            "description": "Path to the dark theme logo",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.Models.CookieSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "lifeTime": {
            "type": "integer",
            "description": "Lifetime value in minutes",
            "format": "int32"
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the cookie settings are enabled or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.Models.DnsSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "dnsName": {
            "type": "string",
            "description": "DNS",
            "nullable": true
          },
          "enable": {
            "type": "boolean",
            "description": "Enabled or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.Models.EmployeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "avatarSmall": {
            "type": "string",
            "nullable": true
          },
          "profileUrl": {
            "type": "string",
            "nullable": true
          },
          "hasAvatar": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.GroupSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "manager": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.PasswordSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "minLength": {
            "type": "integer",
            "description": "Minimum password length",
            "format": "int32"
          },
          "upperCase": {
            "type": "boolean",
            "description": "Specifies if the password must include the uppercase letters or not"
          },
          "digits": {
            "type": "boolean",
            "description": "Specifies if the password must include the digits or not"
          },
          "specSymbols": {
            "type": "boolean",
            "description": "Specifies if the password must include the special symbols or not"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.Models.PaymentUrlRequestsDto": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "description": "The quantity of payment",
            "nullable": true
          },
          "backUrl": {
            "type": "string",
            "description": "Back URL",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Core.Notify.NotificationType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Web.Core.Utility.PasswordSettings": {
        "type": "object",
        "properties": {
          "minLength": {
            "type": "integer",
            "format": "int32"
          },
          "allowedCharactersRegexStr": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "upperCase": {
            "type": "boolean"
          },
          "digits": {
            "type": "boolean"
          },
          "digitsRegexStr": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "upperCaseRegexStr": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "specSymbols": {
            "type": "boolean"
          },
          "specSymbolsRegexStr": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsColorItem": {
        "type": "object",
        "properties": {
          "accent": {
            "type": "string",
            "nullable": true
          },
          "buttons": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "main": {
            "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsColorItem"
          },
          "text": {
            "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsColorItem"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Utility.Settings.WizardSettings": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings": {
        "type": "object",
        "properties": {
          "startDocsEnabled": {
            "type": "boolean"
          },
          "helpCenterEnabled": {
            "type": "boolean"
          },
          "feedbackAndSupportEnabled": {
            "type": "boolean"
          },
          "feedbackAndSupportUrl": {
            "type": "string",
            "nullable": true
          },
          "userForumEnabled": {
            "type": "boolean"
          },
          "userForumUrl": {
            "type": "string",
            "nullable": true
          },
          "videoGuidesEnabled": {
            "type": "boolean"
          },
          "videoGuidesUrl": {
            "type": "string",
            "nullable": true
          },
          "salesEmail": {
            "type": "string",
            "nullable": true
          },
          "buyUrl": {
            "type": "string",
            "nullable": true
          },
          "licenseAgreementsEnabled": {
            "type": "boolean"
          },
          "licenseAgreementsUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettingsWrapper": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "site": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "IsLicensor": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettingsWrapper": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.WhiteLabel.MailWhiteLabelSettings": {
        "type": "object",
        "properties": {
          "footerEnabled": {
            "type": "boolean"
          },
          "footerSocialEnabled": {
            "type": "boolean"
          },
          "supportUrl": {
            "type": "string",
            "nullable": true
          },
          "supportEmail": {
            "type": "string",
            "nullable": true
          },
          "salesEmail": {
            "type": "string",
            "nullable": true
          },
          "demoUrl": {
            "type": "string",
            "nullable": true
          },
          "siteUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.Core.CustomNavigationItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "bigImg": {
            "type": "string",
            "nullable": true
          },
          "smallImg": {
            "type": "string",
            "nullable": true
          },
          "showInMenu": {
            "type": "boolean"
          },
          "showOnHomePage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.Core.EmailActivationSettings": {
        "type": "object",
        "properties": {
          "show": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.Core.TipsSettings": {
        "type": "object",
        "properties": {
          "show": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.AuthKey": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoCertificate": {
        "type": "object",
        "properties": {
          "selfSigned": {
            "type": "boolean"
          },
          "crt": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "domainName": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "expiredDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoFieldMapping": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpCertificateAdvanced": {
        "type": "object",
        "properties": {
          "verifyAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "verifyAuthResponsesSign": {
            "type": "boolean"
          },
          "verifyLogoutRequestsSign": {
            "type": "boolean"
          },
          "verifyLogoutResponsesSign": {
            "type": "boolean"
          },
          "decryptAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "decryptAssertions": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpSettings": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "ssoUrl": {
            "type": "string",
            "nullable": true
          },
          "ssoBinding": {
            "type": "string",
            "nullable": true
          },
          "sloUrl": {
            "type": "string",
            "nullable": true
          },
          "sloBinding": {
            "type": "string",
            "nullable": true
          },
          "nameIdFormat": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2": {
        "type": "object",
        "properties": {
          "enableSso": {
            "type": "boolean",
            "nullable": true
          },
          "idpSettings": {
            "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpSettings"
          },
          "idpCertificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoCertificate"
            },
            "nullable": true
          },
          "idpCertificateAdvanced": {
            "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpCertificateAdvanced"
          },
          "spLoginLabel": {
            "type": "string",
            "nullable": true
          },
          "spCertificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoCertificate"
            },
            "nullable": true
          },
          "spCertificateAdvanced": {
            "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSpCertificateAdvanced"
          },
          "fieldMapping": {
            "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoFieldMapping"
          },
          "hideAuthPage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSpCertificateAdvanced": {
        "type": "object",
        "properties": {
          "signingAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "signAuthRequests": {
            "type": "boolean"
          },
          "signLogoutRequests": {
            "type": "boolean"
          },
          "signLogoutResponses": {
            "type": "boolean"
          },
          "encryptAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "decryptAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "encryptAssertions": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.Utility.ConfirmType": {
        "enum": [
          "EmpInvite",
          "LinkInvite",
          "PortalSuspend",
          "PortalContinue",
          "PortalRemove",
          "DnsChange",
          "PortalOwnerChange",
          "Activation",
          "EmailChange",
          "EmailActivation",
          "PasswordChange",
          "ProfileRemove",
          "PhoneActivation",
          "PhoneAuth",
          "Auth",
          "TfaActivation",
          "TfaAuth",
          "Wizard"
        ],
        "type": "string"
      },
      "ASC.Webhooks.Core.Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "route": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          },
          "disable": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Webhooks.Core.WebhookGroupStatus": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16
        ],
        "type": "integer",
        "format": "int32"
      },
      "Google.Authenticator.SetupCode": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "manualEntryKey": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "qrCodeSetupImageUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SixLabors.ImageSharp.Size": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "isEmpty": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Func`2[[ASC.Core.Common.Configuration.DataStoreConsumer, ASC.Core.Common, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null],[ASC.Core.Common.Configuration.DataStoreConsumer, ASC.Core.Common, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "target": {
            "nullable": true,
            "readOnly": true
          },
          "method": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          }
        },
        "additionalProperties": false
      },
      "System.IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "System.ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "escapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.Module"
            },
            "nullable": true,
            "readOnly": true
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/System.Security.SecurityRuleSet"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.CallingConventions": {
        "enum": [
          1,
          2,
          3,
          32,
          64
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.ConstructorInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/System.Reflection.CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/System.RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeTypedArgument"
            },
            "nullable": true,
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeNamedArgument"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/System.Reflection.MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/System.Reflection.CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.EventAttributes": {
        "enum": [
          0,
          512,
          1024
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.EventInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.EventAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/System.Type"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.FieldAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          4096,
          8192,
          32768,
          38144
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.FieldInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.FieldAttributes"
          },
          "fieldType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/System.RuntimeFieldHandle"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.GenericParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          28
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.ICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "System.Reflection.MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.MemberTypes": {
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          191
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.MethodAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          2048,
          4096,
          8192,
          16384,
          32768,
          53248
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.MethodBase": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/System.Reflection.CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/System.RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.MethodImplAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          4096,
          65535
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.MethodInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/System.Reflection.CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/System.RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "returnParameter": {
            "$ref": "#/components/schemas/System.Reflection.ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/System.Reflection.ICustomAttributeProvider"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/System.Reflection.Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "scopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/System.ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.ParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          4096,
          8192,
          16384,
          32768,
          61440
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/System.Reflection.MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "rawDefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.PropertyAttributes": {
        "enum": [
          0,
          512,
          1024,
          4096,
          8192,
          16384,
          32768,
          62464
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.PropertyInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "propertyType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.PropertyAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.TypeAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          24,
          32,
          128,
          256,
          1024,
          2048,
          4096,
          8192,
          16384,
          65536,
          131072,
          196608,
          262144,
          264192,
          1048576,
          12582912
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.TypeInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/System.Reflection.Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/System.Reflection.GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/System.Runtime.InteropServices.StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/System.RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.EventInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.FieldInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.MemberInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.MethodInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.PropertyInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Runtime.InteropServices.LayoutKind": {
        "enum": [
          0,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Runtime.InteropServices.StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "typeId": {
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/System.Runtime.InteropServices.LayoutKind"
          }
        },
        "additionalProperties": false
      },
      "System.RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/System.IntPtr"
          }
        },
        "additionalProperties": false
      },
      "System.RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/System.IntPtr"
          }
        },
        "additionalProperties": false
      },
      "System.RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/System.IntPtr"
          }
        },
        "additionalProperties": false
      },
      "System.Security.SecurityRuleSet": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "microseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nanoseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMicroseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalNanoseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Type": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/System.Reflection.Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/System.Reflection.GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/System.Runtime.InteropServices.StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/System.RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}